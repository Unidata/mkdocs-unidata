{
    "docs": [
        {
            "location": "/", 
            "text": "Unidata Material Design Theme\n\n\n\n\nThis project is based on \ngithub.com/squidfunk/mkdocs-material\n\n\n\n\nBeautiful project documentation\n\n\nMaterial is a theme for \nMkDocs\n, an excellent static site generator geared\ntowards project documentation. It is built using Google's \nMaterial Design\n\nguidelines.\n\n\n\n\n\n\nQuick start\n\n\nInstall the latest version of Material with \npip\n:\n\n\npip install mkdocs-unidata\n\n\n\n\nAppend the following line to your project's \nmkdocs.yml\n:\n\n\ntheme\n:\n \nunidata\n\n\n\n\n\nThen run the following commands (create and source the python environment for running mkdocs locally)\n\n\nconda env create -f environment.yml\n\nsource\n activate mkdocs-unidata\n\n\n\n\nFinally, serve the docs locally with the command\n\n\nmkdocs serve\n\n\n\n\nand then load the page locally at \nhttp://127.0.0.1:8000\n\n\n\n\nWhat to expect\n\n\n\n\n\n\nResponsive design and fluid layout for all kinds of screens and devices,\n  designed to serve your project documentation in a user-friendly way with\n  optimal readability.\n\n\n\n\n\n\nEasily customizable primary and accent color, fonts, favicon and logo;\n  straight forward localization through theme extension; integrated with Google\n  Analytics, Disqus and GitHub.\n\n\n\n\n\n\nWell-designed search interface accessible through hotkeys (\nF\n or\n  \nS\n), intelligent grouping of search results, search term\n  highlighting and lazy loading.\n\n\n\n\n\n\n\n\nOptions\n\n\nThe Unidata Material theme adds extra variables for configuration via your\nproject's \nmkdocs.yml\n on top of what \nMkDocs Material\n provides.\n\n\nColor palette\n\n\nThe default color scheme attempts to match the existing \nUnidata home page\n color scheme. Primary color is set to (\n#07778f\n) in \nunidata/assets/stylesheets/application-b1a1975878.css\n.\n\n\nCorner logo\n\n\nYou can specify the top-left logo file in \nmkdocs.yml\n:\n\n\nextra\n:\n\n  \ncorner_logo\n:\n \nimages/corner_logo.png\n\n\n\n\n\nwhere the file exists in your repo as \ndocs/images/corner_logo.png\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#unidata-material-design-theme", 
            "text": "This project is based on  github.com/squidfunk/mkdocs-material", 
            "title": "Unidata Material Design Theme"
        }, 
        {
            "location": "/#beautiful-project-documentation", 
            "text": "Material is a theme for  MkDocs , an excellent static site generator geared\ntowards project documentation. It is built using Google's  Material Design \nguidelines.", 
            "title": "Beautiful project documentation"
        }, 
        {
            "location": "/#quick-start", 
            "text": "Install the latest version of Material with  pip :  pip install mkdocs-unidata  Append the following line to your project's  mkdocs.yml :  theme :   unidata   Then run the following commands (create and source the python environment for running mkdocs locally)  conda env create -f environment.yml source  activate mkdocs-unidata  Finally, serve the docs locally with the command  mkdocs serve  and then load the page locally at  http://127.0.0.1:8000", 
            "title": "Quick start"
        }, 
        {
            "location": "/#what-to-expect", 
            "text": "Responsive design and fluid layout for all kinds of screens and devices,\n  designed to serve your project documentation in a user-friendly way with\n  optimal readability.    Easily customizable primary and accent color, fonts, favicon and logo;\n  straight forward localization through theme extension; integrated with Google\n  Analytics, Disqus and GitHub.    Well-designed search interface accessible through hotkeys ( F  or\n   S ), intelligent grouping of search results, search term\n  highlighting and lazy loading.", 
            "title": "What to expect"
        }, 
        {
            "location": "/#options", 
            "text": "The Unidata Material theme adds extra variables for configuration via your\nproject's  mkdocs.yml  on top of what  MkDocs Material  provides.", 
            "title": "Options"
        }, 
        {
            "location": "/#color-palette", 
            "text": "The default color scheme attempts to match the existing  Unidata home page  color scheme. Primary color is set to ( #07778f ) in  unidata/assets/stylesheets/application-b1a1975878.css .", 
            "title": "Color palette"
        }, 
        {
            "location": "/#corner-logo", 
            "text": "You can specify the top-left logo file in  mkdocs.yml :  extra : \n   corner_logo :   images/corner_logo.png   where the file exists in your repo as  docs/images/corner_logo.png .", 
            "title": "Corner logo"
        }, 
        {
            "location": "/extensions/admonition/", 
            "text": "Admonition\n\n\nAdmonition\n is an extension included in the standard Markdown library that\nmakes it possible to add block-styled side content to your documentation, for\nexample summaries, notes, hints or warnings.\n\n\nInstallation\n\n\nAdd the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\nUsage\n\n\nAdmonition blocks follow a simple syntax: every block is started with \n!!!\n,\nfollowed by a single keyword which is used as the \ntype qualifier\n of the\nblock. The content of the block then follows on the next line, indented by\nfour spaces.\n\n\nExample:\n\n\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nChanging the title\n\n\nBy default, the block title will equal the type qualifier in titlecase. However,\nit can easily be changed by adding a quoted string after the type qualifier.\n\n\nExample:\n\n\n!!! note \nPhasellus posuere in sem ut cursus\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nPhasellus posuere in sem ut cursus\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nRemoving the title\n\n\nSimilar to setting a \ncustom title\n, the icon and title can be omitted by\nproviding an empty string after the type qualifier:\n\n\nExample:\n\n\n!!! note \n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nEmbedded code blocks\n\n\nBlocks can contain all kinds of text content, including headlines, lists,\nparagraphs and other blocks \u2013 except code blocks, because the parser from the\nstandard Markdown library does not account for those.\n\n\nHowever, the \nPyMdown Extensions\n package adds an extension called\n\nSuperFences\n, which makes it possible to nest code blocks within other\nblocks, respectively Admonition blocks.\n\n\nExample:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\nLEFT\n \nJOIN\n\n  \nEmployees\n \nAS\n \nManager\n\n\nON\n\n  \nEmployees\n.\nManagerID\n \n=\n \nManager\n.\nEmployeeID\n\n\nWHERE\n\n  \nEmployees\n.\nEmployeeID\n \n=\n \n087652\n;\n\n\n\n\n\nNunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.\n\n\n\n\nCollapsible blocks\n\n\nThe \nDetails\n extension which is also part of the \nPyMdown Extensions\n\npackage adds support for rendering collapsible Admonition blocks. This is\nuseful for FAQs or content that is of secondary nature.\n\n\nExample:\n\n\n??? note \nPhasellus posuere in sem ut cursus\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n??? note \"Phasellus posuere in sem ut cursus\"\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\nBy adding a \n+\n sign directly after the start marker, blocks can be rendered\nopen by default.\n\n\nTypes\n\n\nAdmonition supports user-defined type qualifiers which may influence the style\nof the inserted block. Following is a list of type qualifiers provided by the\nMaterial theme, whereas the default type, and thus fallback for unknown type\nqualifiers, is \nnote\n.\n\n\nNote\n\n\nExample:\n\n\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nnote\n\n\nseealso\n\n\n\n\nSummary\n\n\nExample:\n\n\n!!! summary\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nSummary\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nsummary\n\n\ntldr\n\n\n\n\nInfo\n\n\nExample:\n\n\n!!! info\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nInfo\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ninfo\n\n\ntodo\n\n\n\n\nTip\n\n\nExample:\n\n\n!!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nTip\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ntip\n\n\nhint\n\n\nimportant\n\n\n\n\nSuccess\n\n\nExample:\n\n\n!!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nSuccess\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nsuccess\n\n\ncheck\n\n\ndone\n\n\n\n\nQuestion\n\n\nExample:\n\n\n!!! question\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nQuestion\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nquestion\n\n\nhelp\n\n\nfaq\n\n\n\n\nWarning\n\n\nExample:\n\n\n!!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nWarning\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nwarning\n\n\ncaution\n\n\nattention\n\n\n\n\nFailure\n\n\nExample:\n\n\n!!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nFailure\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nfailure\n\n\nfail\n\n\nmissing\n\n\n\n\nDanger\n\n\nExample:\n\n\n!!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nDanger\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ndanger\n\n\nerror\n\n\n\n\nBug\n\n\nExample:\n\n\n!!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nBug\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nbug\n\n\n\n\nQuote\n\n\nExample:\n\n\n!!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nQuote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nquote\n\n\ncite", 
            "title": "Admonition"
        }, 
        {
            "location": "/extensions/admonition/#admonition", 
            "text": "Admonition  is an extension included in the standard Markdown library that\nmakes it possible to add block-styled side content to your documentation, for\nexample summaries, notes, hints or warnings.", 
            "title": "Admonition"
        }, 
        {
            "location": "/extensions/admonition/#installation", 
            "text": "Add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   admonition", 
            "title": "Installation"
        }, 
        {
            "location": "/extensions/admonition/#usage", 
            "text": "Admonition blocks follow a simple syntax: every block is started with  !!! ,\nfollowed by a single keyword which is used as the  type qualifier  of the\nblock. The content of the block then follows on the next line, indented by\nfour spaces.  Example:  !!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.", 
            "title": "Usage"
        }, 
        {
            "location": "/extensions/admonition/#changing-the-title", 
            "text": "By default, the block title will equal the type qualifier in titlecase. However,\nit can easily be changed by adding a quoted string after the type qualifier.  Example:  !!! note  Phasellus posuere in sem ut cursus \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Phasellus posuere in sem ut cursus  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.", 
            "title": "Changing the title"
        }, 
        {
            "location": "/extensions/admonition/#removing-the-title", 
            "text": "Similar to setting a  custom title , the icon and title can be omitted by\nproviding an empty string after the type qualifier:  Example:  !!! note  \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.", 
            "title": "Removing the title"
        }, 
        {
            "location": "/extensions/admonition/#embedded-code-blocks", 
            "text": "Blocks can contain all kinds of text content, including headlines, lists,\nparagraphs and other blocks \u2013 except code blocks, because the parser from the\nstandard Markdown library does not account for those.  However, the  PyMdown Extensions  package adds an extension called SuperFences , which makes it possible to nest code blocks within other\nblocks, respectively Admonition blocks.  Example:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.  SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees  LEFT   JOIN \n   Employees   AS   Manager  ON \n   Employees . ManagerID   =   Manager . EmployeeID  WHERE \n   Employees . EmployeeID   =   087652 ;   Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.", 
            "title": "Embedded code blocks"
        }, 
        {
            "location": "/extensions/admonition/#collapsible-blocks", 
            "text": "The  Details  extension which is also part of the  PyMdown Extensions \npackage adds support for rendering collapsible Admonition blocks. This is\nuseful for FAQs or content that is of secondary nature.  Example:  ??? note  Phasellus posuere in sem ut cursus \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:  ??? note \"Phasellus posuere in sem ut cursus\"  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.  By adding a  +  sign directly after the start marker, blocks can be rendered\nopen by default.", 
            "title": "Collapsible blocks"
        }, 
        {
            "location": "/extensions/admonition/#types", 
            "text": "Admonition supports user-defined type qualifiers which may influence the style\nof the inserted block. Following is a list of type qualifiers provided by the\nMaterial theme, whereas the default type, and thus fallback for unknown type\nqualifiers, is  note .", 
            "title": "Types"
        }, 
        {
            "location": "/extensions/admonition/#note", 
            "text": "Example:  !!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   note  seealso", 
            "title": "Note"
        }, 
        {
            "location": "/extensions/admonition/#summary", 
            "text": "Example:  !!! summary\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Summary  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   summary  tldr", 
            "title": "Summary"
        }, 
        {
            "location": "/extensions/admonition/#info", 
            "text": "Example:  !!! info\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Info  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   info  todo", 
            "title": "Info"
        }, 
        {
            "location": "/extensions/admonition/#tip", 
            "text": "Example:  !!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Tip  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   tip  hint  important", 
            "title": "Tip"
        }, 
        {
            "location": "/extensions/admonition/#success", 
            "text": "Example:  !!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Success  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   success  check  done", 
            "title": "Success"
        }, 
        {
            "location": "/extensions/admonition/#question", 
            "text": "Example:  !!! question\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Question  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   question  help  faq", 
            "title": "Question"
        }, 
        {
            "location": "/extensions/admonition/#warning", 
            "text": "Example:  !!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Warning  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   warning  caution  attention", 
            "title": "Warning"
        }, 
        {
            "location": "/extensions/admonition/#failure", 
            "text": "Example:  !!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Failure  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   failure  fail  missing", 
            "title": "Failure"
        }, 
        {
            "location": "/extensions/admonition/#danger", 
            "text": "Example:  !!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Danger  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   danger  error", 
            "title": "Danger"
        }, 
        {
            "location": "/extensions/admonition/#bug", 
            "text": "Example:  !!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Bug  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   bug", 
            "title": "Bug"
        }, 
        {
            "location": "/extensions/admonition/#quote", 
            "text": "Example:  !!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Quote  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   quote  cite", 
            "title": "Quote"
        }, 
        {
            "location": "/extensions/codehilite/", 
            "text": "CodeHilite\n\n\nCodeHilite\n is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.\n\n\n\n\nSyntax highlighting not working?\n\n\nPlease ensure that \nPygments\n is installed. See the next section for\nfurther directions on how to set up Pygments or use the official\n\nDocker image\n with all dependencies pre-installed.\n\n\n\n\nInstallation\n\n\nCodeHilite parses code blocks and wraps them in \npre\n tags. If \nPygments\n\nis installed, which is a generic syntax highlighter with support for over\n\n300 languages\n, CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:\n\n\npip install pygments\n\n\n\n\nTo enable CodeHilite, add the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite\n\n\n\n\n\n\n\nMigrating from Material 0.2.x\n\n\nIn 0.2.x the CodeHilite extension was included with\n\ncodehilite(css_class=code)\n which switched the CSS class from\n\n.codehilite\n to \n.code\n. The current version of the theme doesn't require\nthat and defines styles for the default \n.codehilite\n class, so the part\n\ncss_class=code\n needs to be removed.\n\n\n\n\nUsage\n\n\nSpecifying the language\n\n\nThe CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.\n\n\nvia Markdown syntax \nrecommended\n\n\nIn Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.\n\n\nExample:\n\n\n``` python\nimport tensorflow as tf\n```\n\n\n\n\nResult:\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\nvia Shebang\n\n\nAlternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.\n\n\nExample:\n\n\n    #!/usr/bin/python\n    import tensorflow as tf\n\n\n\n\nResult:\n\n\n#!/usr/bin/python\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\nvia three colons\n\n\nIf the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.\n\n\nExample:\n\n\n    :::python\n    import tensorflow as tf\n\n\n\n\nResult:\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n\nAdding line numbers\n\n\nLine numbers can be added by enabling the \nlinenums\n flag in your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(linenums=true)\n\n\n\n\n\nExample:\n\n\n``` python\n\n Bubble sort \n\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] \n items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n Bubble sort \n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n            \nif\n \nitems\n[\nj\n]\n \n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nHighlighting specific lines\n\n\nSpecific lines can be highlighted by passing the line numbers to the \nhl_lines\n\nargument placed right after the language identifier. Line counts start at 1.\n\n\nExample:\n\n\n``` python hl_lines=\n3 4\n\n\n Bubble sort \n\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] \n items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n Bubble sort \n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n\n            \nif\n \nitems\n[\nj\n]\n \n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nSupported languages \nexcerpt\n\n\nCodeHilite uses \nPygments\n, a generic syntax highlighter with support for\nover \n300 languages\n, so the following list of examples is just an excerpt.\n\n\nBash\n\n\n#!/bin/bash\n\n\n\nfor\n OPT in \n$@\n\n\ndo\n\n  \ncase\n \n$OPT\n in\n    \n-f\n \n)\n  \ncanonicalize\n=\n1\n \n;;\n\n    \n-n\n \n)\n  \nswitchlf\n=\n-n\n \n;;\n\n  \nesac\n\n\ndone\n\n\n\n# readlink -f\n\n\nfunction\n __readlink_f \n{\n\n  \ntarget\n=\n$1\n\n  \nwhile\n \ntest\n -n \n$target\n;\n \ndo\n\n    \nfilepath\n=\n$target\n\n    \ncd\n \n`\ndirname \n$filepath\n`\n\n    \ntarget\n=\n`\nreadlink \n$filepath\n`\n\n  \ndone\n\n  /bin/echo \n$switchlf\n \n`\npwd\n -P\n`\n/\n`\nbasename \n$filepath\n`\n\n\n}\n\n\n\nif\n \n[\n ! \n$canonicalize\n \n]\n;\n \nthen\n\n  readlink \n$switchlf\n \n$@\n\n\nelse\n\n  \nfor\n file in \n$@\n\n  \ndo\n\n    \ncase\n \n$file\n in\n      -* \n)\n  \n;;\n\n      *  \n)\n  __readlink_f \n$file\n \n;;\n\n    \nesac\n\n    \ndone\n\n\nfi\n\n\n\nexit\n \n$?\n\n\n\n\n\nC\n\n\nextern\n \nsize_t\n\n\npb_varint_scan\n(\nconst\n \nuint8_t\n \ndata\n[],\n \nsize_t\n \nleft\n)\n \n{\n\n  \nassert\n(\ndata\n \n \nleft\n);\n\n  \nleft\n \n=\n \nleft\n \n \n10\n \n?\n \n10\n \n:\n \nleft\n;\n\n\n\n#ifdef __SSE2__\n\n\n  \n/* Mapping: remaining bytes ==\n bitmask */\n\n  \nstatic\n \nconst\n \nint\n \nmask_map\n[]\n \n=\n \n{\n\n    \n0x0000\n,\n \n0x0001\n,\n \n0x0003\n,\n \n0x0007\n,\n\n    \n0x000F\n,\n \n0x001F\n,\n \n0x003F\n,\n \n0x007F\n,\n\n    \n0x00FF\n,\n \n0x01FF\n,\n \n0x03FF\n\n  \n};\n\n\n  \n/* Load buffer into 128-bit integer and create high-bit mask */\n\n  \n__m128i\n \ntemp\n \n=\n \n_mm_loadu_si128\n((\nconst\n \n__m128i\n \n*\n)\ndata\n);\n\n  \n__m128i\n \nhigh\n \n=\n \n_mm_set1_epi8\n(\n0x80\n);\n\n\n  \n/* Intersect and extract mask with high-bits set */\n\n  \nint\n \nmask\n \n=\n \n_mm_movemask_epi8\n(\n_mm_and_si128\n(\ntemp\n,\n \nhigh\n));\n\n  \nmask\n \n=\n \n(\nmask\n \n \nmask_map\n[\nleft\n])\n \n^\n \nmask_map\n[\nleft\n];\n\n\n  \n/* Count trailing zeroes */\n\n  \nreturn\n \nmask\n \n?\n \n__builtin_ctz\n(\nmask\n)\n \n+\n \n1\n \n:\n \n0\n;\n\n\n\n#else\n\n\n  \n/* Linear scan */\n\n  \nsize_t\n \nsize\n \n=\n \n0\n;\n\n  \nwhile\n \n(\ndata\n[\nsize\n++\n]\n \n \n0x80\n)\n\n    \nif\n \n(\n!--\nleft\n)\n\n      \nreturn\n \n0\n;\n\n  \nreturn\n \nsize\n;\n\n\n\n#endif \n/* __SSE2__ */\n\n\n\n}\n\n\n\n\n\nC++\n\n\nExtension\n::\n\n\nExtension\n(\nconst\n \nDescriptor\n \n*\ndescriptor\n,\n \nconst\n \nDescriptor\n \n*\nscope\n)\n \n:\n\n    \ndescriptor_\n(\ndescriptor\n),\n\n    \nscope_\n(\nscope\n)\n \n{\n\n\n  \n/* Extract full name for signature */\n\n  \nvariables_\n[\nsignature\n]\n \n=\n \ndescriptor_\n-\nfull_name\n();\n\n\n  \n/* Prepare message symbol */\n\n  \nvariables_\n[\nmessage\n]\n \n=\n \nStringReplace\n(\n\n    \nvariables_\n[\nsignature\n],\n \n.\n,\n \n_\n,\n \ntrue\n);\n\n  \nLowerString\n(\n(\nvariables_\n[\nmessage\n]));\n\n\n  \n/* Suffix scope to identifiers, if given */\n\n  \nstring\n \nsuffix\n \n(\n);\n\n  \nif\n \n(\nscope_\n)\n \n{\n\n    \nsuffix\n \n=\n \nscope_\n-\nfull_name\n();\n\n\n    \n/* Check if the base and extension types are in the same package */\n\n    \nif\n \n(\n!\nscope_\n-\nfile\n()\n-\npackage\n().\ncompare\n(\ndescriptor_\n-\nfile\n()\n-\npackage\n()))\n\n      \nsuffix\n \n=\n \nStripPrefixString\n(\nsuffix\n,\n\n        \nscope_\n-\nfile\n()\n-\npackage\n()\n \n+\n \n.\n);\n\n\n    \n/* Append to signature */\n\n    \nvariables_\n[\nsignature\n]\n \n+=\n \n.[\n \n+\n \nsuffix\n \n+\n]\n;\n\n    \nsuffix\n \n=\n \n_\n \n+\n \nsuffix\n;\n\n  \n}\n\n\n  \n/* Prepare extension symbol */\n\n  \nvariables_\n[\nextension\n]\n \n=\n \nStringReplace\n(\n\n    \nsuffix\n,\n \n.\n,\n \n_\n,\n \ntrue\n);\n\n  \nLowerString\n(\n(\nvariables_\n[\nextension\n]));\n\n\n}\n\n\n\n\n\nC\n\n\npublic\n \nstatic\n \nvoid\n \nSend\n(\n\n    \nSocket\n \nsocket\n,\n \nbyte\n[]\n \nbuffer\n,\n \nint\n \noffset\n,\n \nint\n \nsize\n,\n \nint\n \ntimeout\n)\n \n{\n\n  \nint\n \nstartTickCount\n \n=\n \nEnvironment\n.\nTickCount\n;\n\n  \nint\n \nsent\n \n=\n \n0\n;\n\n  \ndo\n \n{\n\n    \nif\n \n(\nEnvironment\n.\nTickCount\n \n \nstartTickCount\n \n+\n \ntimeout\n)\n\n      \nthrow\n \nnew\n \nException\n(\nTimeout.\n);\n\n    \ntry\n \n{\n\n      \nsent\n \n+=\n \nsocket\n.\nSend\n(\nbuffer\n,\n \noffset\n \n+\n \nsent\n,\n\n        \nsize\n \n-\n \nsent\n,\n \nSocketFlags\n.\nNone\n);\n\n    \n}\n \ncatch\n \n(\nSocketException\n \nex\n)\n \n{\n\n      \nif\n \n(\nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nWouldBlock\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nIOPending\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nNoBufferSpaceAvailable\n)\n \n{\n\n        \n/* Socket buffer is probably full, wait and try again */\n\n        \nThread\n.\nSleep\n(\n30\n);\n\n      \n}\n \nelse\n \n{\n\n        \nthrow\n \nex\n;\n\n      \n}\n\n    \n}\n\n  \n}\n \nwhile\n \n(\nsent\n \n \nsize\n);\n\n\n}\n\n\n\n\n\nClojure\n\n\n(\nclojure-version\n)\n\n\n\n(\ndefn \npartition-when\n\n  \n[\nf\n]\n\n  \n(\nfn \n[\nrf\n]\n\n    \n(\nlet \n[\na\n \n(\njava.util.ArrayList.\n)\n\n          \nfval\n \n(\nvolatile!\n \nfalse\n)]\n\n      \n(\nfn\n\n        \n([]\n \n(\nrf\n))\n\n        \n([\nresult\n]\n\n           \n(\nlet \n[\nresult\n \n(\nif \n(\n.isEmpty\n \na\n)\n\n                          \nresult\n\n                          \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                            \n;; Clear first\n\n                            \n(\n.clear\n \na\n)\n\n                            \n(\nunreduced\n \n(\nrf\n \nresult\n \nv\n))))]\n\n             \n(\nrf\n \nresult\n)))\n\n        \n([\nresult\n \ninput\n]\n\n            \n(\nif-not \n(\nand \n(\nf\n \ninput\n)\n  \n@\nfval\n)\n\n               \n(\ndo\n\n                 \n(\nvreset!\n \nfval\n \ntrue\n)\n\n                 \n(\n.add\n \na\n \ninput\n)\n\n                 \nresult\n)\n\n               \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                 \n(\n.clear\n \na\n)\n\n                 \n(\nlet \n[\nret\n \n(\nrf\n \nresult\n \nv\n)]\n\n                   \n(\nwhen-not \n(\nreduced?\n \nret\n)\n\n                     \n(\n.add\n \na\n \ninput\n))\n\n                   \nret\n))))))))\n\n\n\n\n(\ninto \n[]\n \n(\npartition-when\n\n          \n#\n(\n.startsWith\n \n%\n \n))\n\n          \n[\n1d\n \n33\n \n 1\n \n 2\n \n22\n \n 3\n])\n\n\n\n\n\nDiff\n\n\nIndex: grunt.js\n\n\n===================================================================\n\n\n--- grunt.js    (revision 31200)\n\n\n+++ grunt.js    (working copy)\n\n\n@@ -12,6 +12,7 @@\n\n\n module.exports = function (grunt) {\n\n\n+  console.log(\nhello world\n);\n\n   // Project configuration.\n   grunt.initConfig({\n     lint: {\n\n@@ -19,10 +20,6 @@\n\n         \npackages/services.web/{!(test)/**/,}*.js\n,\n         \npackages/error/**/*.js\n\n       ],\n\n-      scripts: [\n\n\n-        \ngrunt.js\n,\n\n\n-        \ndb/**/*.js\n\n\n-      ],\n\n       browser: [\n         \npackages/web/server.js\n,\n         \npackages/web/server/**/*.js\n,\n\n\n\n\nDocker\n\n\nFROM\n ubuntu\n\n\n\n# Install vnc, xvfb in order to create a \nfake\n display and firefox\n\n\nRUN\n apt-get update \n apt-get install -y x11vnc xvfb firefox\n\nRUN\n mkdir ~/.vnc\n\n\n# Setup a password\n\n\nRUN\n x11vnc -storepasswd \n1234\n ~/.vnc/passwd\n\n\n# Autostart firefox (might not be the best way, but it does the trick)\n\n\nRUN\n bash -c \necho \nfirefox\n \n /.bashrc\n\n\n\nEXPOSE\n 5900\n\n\nCMD\n [\nx11vnc\n, \n-forever\n, \n-usepw\n, \n-create\n]\n\n\n\n\n\nElixir\n\n\nrequire\n \nLogger\n\n\n\ndef\n \naccept\n(\nport\n)\n \ndo\n\n  \n{\n:ok\n,\n \nsocket\n}\n \n=\n \n:gen_tcp\n.\nlisten\n(\nport\n,\n\n                    \n[\n:binary\n,\n \npacket\n:\n \n:line\n,\n \nactive\n:\n \nfalse\n,\n \nreuseaddr\n:\n \ntrue\n])\n\n  \nLogger\n.\ninfo\n \nAccepting connections on port \n#{\nport\n}\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nloop_acceptor\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \nclient\n}\n \n=\n \n:gen_tcp\n.\naccept\n(\nsocket\n)\n\n  \nserve\n(\nclient\n)\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nserve\n(\nsocket\n)\n \ndo\n\n  \nsocket\n\n  \n|\n \nread_line\n()\n\n  \n|\n \nwrite_line\n(\nsocket\n)\n\n\n  \nserve\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nread_line\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \ndata\n}\n \n=\n \n:gen_tcp\n.\nrecv\n(\nsocket\n,\n \n0\n)\n\n  \ndata\n\n\nend\n\n\n\ndefp\n \nwrite_line\n(\nline\n,\n \nsocket\n)\n \ndo\n\n  \n:gen_tcp\n.\nsend\n(\nsocket\n,\n \nline\n)\n\n\nend\n\n\n\n\n\nErlang\n\n\ncircular\n(\nDefs\n)\n \n-\n\n  \n[\n \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n||\n\n    \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n-\n \nDefs\n,\n \nType\n \n==\n \nmsg\n,\n \ncircular\n(\nBase\n,\n \nDefs\n)\n \n].\n\n\n\ncircular\n(\nBase\n,\n \nDefs\n)\n \n-\n\n  \nFields\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nBase\n \n},\n \nDefs\n),\n\n  \ncircular\n(\nDefs\n,\n \nFields\n,\n \n[\nBase\n]).\n\n\n\ncircular\n(_\nDefs\n,\n \n[],\n \n_\nPath\n)\n \n-\n\n  \nfalse\n;\n\n\ncircular\n(\nDefs\n,\n \n[\nField\n \n|\n \nFields\n],\n \nPath\n)\n \n-\n\n  \ncase\n \nField\n#field.type\n \nof\n\n    \n{\n \nmsg\n,\n \nType\n \n}\n \n-\n\n      \ncase\n \nlists\n:\nmember\n(\nType\n,\n \nPath\n)\n \nof\n\n        \nfalse\n \n-\n\n          \nChildren\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nType\n \n},\n \nDefs\n),\n\n          \ncase\n \ncircular\n(\nDefs\n,\n \nChildren\n,\n \n[\nType\n \n|\n \nPath\n])\n \nof\n\n            \nfalse\n \n-\n \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n);\n\n            \ntrue\n  \n-\n \ntrue\n\n          \nend\n;\n\n        \ntrue\n \n-\n\n          \nType\n \n==\n \nlists\n:\nlast\n(\nPath\n)\n \nandalso\n\n            \n(\nlength\n(\nPath\n)\n \n==\n \n1\n \norelse\n \nnot\n \nis_tree\n(\nPath\n))\n\n      \nend\n;\n\n    \n_\n \n-\n\n      \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n)\n\n  \nend\n.\n\n\n\n\n\nF\n\n\n/// Asynchronously download retangles from the server\n\n\n/// and decode the JSON format to F# Rectangle record\n\n\nlet\n \n[\nJs\n]\n \ngetRectangles\n \n()\n \n:\n \nAsync\nRectangle\n[]\n \n=\n \nasync\n \n{\n\n  \nlet\n \nreq\n \n=\n \nXMLHttpRequest\n()\n\n  \nreq\n.\nOpen\n(\nPOST\n,\n \n/get\n,\n \ntrue\n)\n\n  \nlet!\n \nresp\n \n=\n \nreq\n.\nAsyncSend\n()\n\n  \nreturn\n \nJSON\n.\nparse\n(\nresp\n)\n \n}\n\n\n\n/// Repeatedly update rectangles after 0.5 sec\n\n\nlet\n \n[\nJs\n]\n \nupdateLoop\n \n()\n \n=\n \nasync\n \n{\n\n  \nwhile\n \ntrue\n \ndo\n\n    \ndo\n!\n \nAsync\n.\nSleep\n(\n500\n)\n\n    \nlet!\n \nrects\n \n=\n \ngetRectangles\n()\n\n    \ncleanRectangles\n()\n\n    \nrects\n \n|\n \nArray\n.\niter\n \ncreateRectangle\n \n}\n\n\n\n\n\nGo\n\n\npackage\n \nmain\n\n\n\nimport\n \nfmt\n\n\n\nfunc\n \ncounter\n(\nid\n \nint\n,\n \nchannel\n \nchan\n \nint\n,\n \ncloser\n \nbool\n)\n \n{\n\n  \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n \n10000000\n;\n \ni\n++\n \n{\n\n    \nfmt\n.\nPrintln\n(\nprocess\n,\n \nid\n,\n send\n,\n \ni\n)\n\n    \nchannel\n \n-\n \n1\n\n  \n}\n\n  \nif\n \ncloser\n \n{\n \nclose\n(\nchannel\n \n)\n \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n  \nchannel\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n  \ngo\n \ncounter\n(\n1\n,\n \nchannel\n,\n \nfalse\n)\n\n  \ngo\n \ncounter\n(\n2\n,\n \nchannel\n,\n \ntrue\n)\n\n\n  \nx\n \n:=\n \n0\n\n\n  \n// receiving data from channel\n\n  \nfor\n \ni\n \n:=\n \nrange\n \nchannel\n \n{\n\n    \nfmt\n.\nPrintln\n(\nreceiving\n)\n\n    \nx\n \n+=\n \ni\n\n  \n}\n\n\n  \nfmt\n.\nPrintln\n(\nx\n)\n\n\n}\n\n\n\n\n\nHTML\n\n\n!doctype html\n\n\nhtml\n \nclass\n=\nno-js\n \nlang\n=\n\n  \nhead\n\n    \nmeta\n \ncharset\n=\nutf-8\n\n    \nmeta\n \nhttp-equiv\n=\nx-ua-compatible\n \ncontent\n=\nie=edge\n\n    \ntitle\nHTML5 Boilerplate\n/\ntitle\n\n    \nmeta\n \nname\n=\ndescription\n \ncontent\n=\n\n    \nmeta\n \nname\n=\nviewport\n \ncontent\n=\nwidth=device-width, initial-scale=1\n\n\n    \nlink\n \nrel\n=\napple-touch-icon\n \nhref\n=\napple-touch-icon.png\n\n    \nlink\n \nrel\n=\nstylesheet\n \nhref\n=\ncss/normalize.css\n\n    \nlink\n \nrel\n=\nstylesheet\n \nhref\n=\ncss/main.css\n\n    \nscript\n \nsrc\n=\njs/vendor/modernizr-2.8.3.min.js\n/\nscript\n\n  \n/\nhead\n\n  \nbody\n\n    \np\nHello world! This is HTML5 Boilerplate.\n/\np\n\n  \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\nJava\n\n\nimport\n \njava.util.LinkedList\n;\n\n\nimport\n \njava.lang.reflect.Array\n;\n\n\n\npublic\n \nclass\n \nUnsortedHashSet\nE\n \n{\n\n\n  \nprivate\n \nstatic\n \nfinal\n \ndouble\n \nLOAD_FACTOR_LIMIT\n \n=\n \n0.7\n;\n\n\n  \nprivate\n \nint\n \nsize\n;\n\n  \nprivate\n \nLinkedList\nE\n[]\n \ncon\n;\n\n\n  \npublic\n \nUnsortedHashSet\n()\n \n{\n\n    \ncon\n  \n=\n \n(\nLinkedList\nE\n[])(\nnew\n \nLinkedList\n[\n10\n]);\n\n  \n}\n\n\n  \npublic\n \nboolean\n \nadd\n(\nE\n \nobj\n)\n \n{\n\n    \nint\n \noldSize\n \n=\n \nsize\n;\n\n    \nint\n \nindex\n \n=\n \nMath\n.\nabs\n(\nobj\n.\nhashCode\n())\n \n%\n \ncon\n.\nlength\n;\n\n    \nif\n \n(\ncon\n[\nindex\n]\n \n==\n \nnull\n)\n\n      \ncon\n[\nindex\n]\n \n=\n \nnew\n \nLinkedList\nE\n();\n\n    \nif\n \n(!\ncon\n[\nindex\n].\ncontains\n(\nobj\n))\n \n{\n\n      \ncon\n[\nindex\n].\nadd\n(\nobj\n);\n\n      \nsize\n++;\n\n    \n}\n\n    \nif\n \n(\n1.0\n \n*\n \nsize\n \n/\n \ncon\n.\nlength\n \n \nLOAD_FACTOR_LIMIT\n)\n\n      \nresize\n();\n\n    \nreturn\n \noldSize\n \n!=\n \nsize\n;\n\n  \n}\n\n\n  \nprivate\n \nvoid\n \nresize\n()\n \n{\n\n    \nUnsortedHashSet\nE\n \ntemp\n \n=\n \nnew\n \nUnsortedHashSet\nE\n();\n\n    \ntemp\n.\ncon\n \n=\n \n(\nLinkedList\nE\n[])(\nnew\n \nLinkedList\n[\ncon\n.\nlength\n \n*\n \n2\n \n+\n \n1\n]);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n \ncon\n.\nlength\n;\n \ni\n++)\n \n{\n\n      \nif\n \n(\ncon\n[\ni\n]\n \n!=\n \nnull\n)\n\n        \nfor\n \n(\nE\n \ne\n \n:\n \ncon\n[\ni\n])\n\n          \ntemp\n.\nadd\n(\ne\n);\n\n    \n}\n\n    \ncon\n \n=\n \ntemp\n.\ncon\n;\n\n  \n}\n\n\n  \npublic\n \nint\n \nsize\n()\n \n{\n\n    \nreturn\n \nsize\n;\n\n  \n}\n\n\n}\n\n\n\n\n\nJavaScript\n\n\nvar\n \nMath\n \n=\n \nrequire\n(\nlib/math\n);\n\n\n\nvar\n \n_extends\n \n=\n \nfunction\n \n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\nvar\n \ne\n \n=\n \nexports\n.\ne\n \n=\n \n2.71828182846\n;\n\n\nexports\n[\ndefault\n]\n \n=\n \nfunction\n \n(\nx\n)\n \n{\n\n  \nreturn\n \nMath\n.\nexp\n(\nx\n);\n\n\n};\n\n\n\nmodule\n.\nexports\n \n=\n \n_extends\n(\nexports\n[\ndefault\n],\n \nexports\n);\n\n\n\n\n\nJSON\n\n\n{\n\n  \nname\n:\n \nmkdocs-material\n,\n\n  \nversion\n:\n \n0.2.4\n,\n\n  \ndescription\n:\n \nA Material Design theme for MkDocs\n,\n\n  \nhomepage\n:\n \nhttp://squidfunk.github.io/mkdocs-material/\n,\n\n  \nauthors\n:\n \n[\n\n    \nsquidfunk \nmartin.donath@squidfunk.com\n\n  \n],\n\n  \nlicense\n:\n \nMIT\n,\n\n  \nmain\n:\n \nGulpfile.js\n,\n\n  \nscripts\n:\n \n{\n\n    \nstart\n:\n \n./node_modules/.bin/gulp watch --mkdocs\n,\n\n    \nbuild\n:\n \n./node_modules/.bin/gulp build --production\n\n  \n}\n\n  \n...\n\n\n}\n\n\n\n\n\nJulia\n\n\nusing\n \nMXNet\n\n\n\nmlp\n \n=\n \n@mx\n.\nchain\n \nmx\n.\nVariable\n(\n:\ndata\n)\n             \n=\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc1\n,\n \nnum_hidden\n=\n128\n)\n \n=\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu1\n,\n \nact_type\n=:\nrelu\n)\n   \n=\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc2\n,\n \nnum_hidden\n=\n64\n)\n  \n=\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu2\n,\n \nact_type\n=:\nrelu\n)\n   \n=\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc3\n,\n \nnum_hidden\n=\n10\n)\n  \n=\n\n  \nmx\n.\nSoftmaxOutput\n(\nname\n=:\nsoftmax\n)\n\n\n\n# data provider\n\n\nbatch_size\n \n=\n \n100\n\n\ninclude\n(\nPkg\n.\ndir\n(\nMXNet\n,\n \nexamples\n,\n \nmnist\n,\n \nmnist-data.jl\n))\n\n\ntrain_provider\n,\n \neval_provider\n \n=\n \nget_mnist_providers\n(\nbatch_size\n)\n\n\n\n# setup model\n\n\nmodel\n \n=\n \nmx\n.\nFeedForward\n(\nmlp\n,\n \ncontext\n=\nmx\n.\ncpu\n())\n\n\n\n# optimization algorithm\n\n\noptimizer\n \n=\n \nmx\n.\nSGD\n(\nlr\n=\n0.1\n,\n \nmomentum\n=\n0.9\n)\n\n\n\n# fit parameters\n\n\nmx\n.\nfit\n(\nmodel\n,\n \noptimizer\n,\n \ntrain_provider\n,\n \nn_epoch\n=\n20\n,\n \neval_data\n=\neval_provider\n)\n\n\n\n\n\nLua\n\n\nlocal\n \nffi\n \n=\n \nrequire\n(\nffi\n)\n\n\n\nffi\n.\ncdef\n[[\n\n\n  void Sleep(int ms);\n\n\n  int poll(struct pollfd *fds, unsigned long nfds, int timeout);\n\n\n]]\n\n\n\nlocal\n \nsleep\n\n\nif\n \nffi\n.\nos\n \n==\n \nWindows\n \nthen\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\nSleep\n(\ns\n*\n1000\n)\n\n  \nend\n\n\nelse\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\npoll\n(\nnil\n,\n \n0\n,\n \ns\n \n*\n \n1000\n)\n\n  \nend\n\n\nend\n\n\n\nfor\n \ni\n \n=\n \n1\n,\n160\n \ndo\n\n  \nio.write\n(\n.\n);\n \nio.flush\n()\n\n  \nsleep\n(\n0.01\n)\n\n\nend\n\n\nio.write\n(\n\\n\n)\n\n\n\n\n\nMySQL\n\n\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\nLEFT\n \nJOIN\n\n  \nEmployees\n \nAS\n \nManager\n\n\nON\n\n  \nEmployees\n.\nManagerID\n \n=\n \nManager\n.\nEmployeeID\n\n\nWHERE\n\n  \nEmployees\n.\nEmployeeID\n \n=\n \n087652\n;\n\n\n\n\n\nPHP\n\n\n?php\n\n\n\n// src/AppBundle/Controller/LuckyController.php\n\n\nnamespace\n \nAppBundle\\Controller\n;\n\n\n\nuse\n \nSensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route\n;\n\n\nuse\n \nSymfony\\Component\\HttpFoundation\\Response\n;\n\n\n\nclass\n \nLuckyController\n \n{\n\n\n  \n/**\n\n\n   * @Route(\n/lucky/number\n)\n\n\n   */\n\n  \npublic\n \nfunction\n \nnumberAction\n()\n \n{\n\n    \n$number\n \n=\n \nmt_rand\n(\n0\n,\n \n100\n);\n\n\n    \nreturn\n \nnew\n \nResponse\n(\n\n      \nhtml\nbody\nLucky number: \n.\n$number\n.\n/body\n/html\n\n    \n);\n\n  \n}\n\n\n}\n\n\n\n\n\nProtocol Buffers\n\n\nsyntax\n \n=\n \nproto2\n;\n\n\n\npackage\n \ncaffe\n;\n\n\n\n// Specifies the shape (dimensions) of a Blob.\n\n\nmessage\n \nBlobShape\n \n{\n\n  \nrepeated\n \nint64\n \ndim\n \n=\n \n1\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n}\n\n\n\nmessage\n \nBlobProto\n \n{\n\n  \noptional\n \nBlobShape\n \nshape\n \n=\n \n7\n;\n\n  \nrepeated\n \nfloat\n \ndata\n \n=\n \n5\n \n[\npacked\n \n=\n \ntrue\n];\n\n  \nrepeated\n \nfloat\n \ndiff\n \n=\n \n6\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n  \n// 4D dimensions -- deprecated.  Use \nshape\n instead.\n\n  \noptional\n \nint32\n \nnum\n \n=\n \n1\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nchannels\n \n=\n \n2\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nheight\n \n=\n \n3\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nwidth\n \n=\n \n4\n \n[\ndefault\n \n=\n \n0\n];\n\n\n}\n\n\n\n\n\nPython\n\n\n\n\n  A very simple MNIST classifier.\n\n\n  See extensive documentation at\n\n\n  http://tensorflow.org/tutorials/mnist/beginners/index.md\n\n\n\n\nfrom\n \n__future__\n \nimport\n \nabsolute_import\n\n\nfrom\n \n__future__\n \nimport\n \ndivision\n\n\nfrom\n \n__future__\n \nimport\n \nprint_function\n\n\n\n# Import data\n\n\nfrom\n \ntensorflow.examples.tutorials.mnist\n \nimport\n \ninput_data\n\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\nflags\n \n=\n \ntf\n.\napp\n.\nflags\n\n\nFLAGS\n \n=\n \nflags\n.\nFLAGS\n\n\nflags\n.\nDEFINE_string\n(\ndata_dir\n,\n \n/tmp/data/\n,\n \nDirectory for storing data\n)\n\n\n\nmnist\n \n=\n \ninput_data\n.\nread_data_sets\n(\nFLAGS\n.\ndata_dir\n,\n \none_hot\n=\nTrue\n)\n\n\n\nsess\n \n=\n \ntf\n.\nInteractiveSession\n()\n\n\n\n# Create the model\n\n\nx\n \n=\n \ntf\n.\nplaceholder\n(\ntf\n.\nfloat32\n,\n \n[\nNone\n,\n \n784\n])\n\n\nW\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n784\n,\n \n10\n]))\n\n\nb\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n10\n]))\n\n\ny\n \n=\n \ntf\n.\nnn\n.\nsoftmax\n(\ntf\n.\nmatmul\n(\nx\n,\n \nW\n)\n \n+\n \nb\n)\n\n\n\n\n\nRuby\n\n\nrequire\n \nfinity/event\n\n\nrequire\n \nfinity/machine\n\n\nrequire\n \nfinity/state\n\n\nrequire\n \nfinity/transition\n\n\nrequire\n \nfinity/version\n\n\n\nmodule\n \nFinity\n\n  \nclass\n \nInvalidCallback\n \n \nStandardError\n;\n \nend\n\n  \nclass\n \nMissingCallback\n \n \nStandardError\n;\n \nend\n\n  \nclass\n \nInvalidState\n    \n \nStandardError\n;\n \nend\n\n\n  \n# Class methods to be injected into the including class upon inclusion.\n\n  \nmodule\n \nClassMethods\n\n\n    \n# Instantiate a new state machine for the including class by accepting a\n\n    \n# block with state and event (and subsequent transition) definitions.\n\n    \ndef\n \nfinity\n \noptions\n \n=\n \n{},\n \nblock\n\n      \n@finity\n \n||=\n \nMachine\n.\nnew\n \nself\n,\n \noptions\n,\n \nblock\n\n    \nend\n\n\n    \n# Return the names of all registered states.\n\n    \ndef\n \nstates\n\n      \n@finity\n.\nstates\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n\n    \n# Return the names of all registered events.\n\n    \ndef\n \nevents\n\n      \n@finity\n.\nevents\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n  \nend\n\n\n  \n# Inject methods into the including class upon inclusion.\n\n  \ndef\n \nself\n.\nincluded\n \nbase\n\n    \nbase\n.\nextend\n \nClassMethods\n\n  \nend\n\n\nend\n\n\n\n\n\nXML\n\n\n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n\n!DOCTYPE mainTag SYSTEM \nsome.dtd\n [ENTITY % entity]\n\n\n?oxygen RNGSchema=\nsome.rng\n type=\nxml\n?\n\n\nxs:main-Tag\n \nxmlns:xs=\nhttp://www.w3.org/2001/XMLSchema\n\n  \n!-- This is a sample comment --\n\n  \nchildTag\n \nattribute=\nQuoted Value\n \nanother-attribute=\nSingle quoted value\n\n      \na-third-attribute=\n123\n\n    \nwithTextContent\nSome text content\n/withTextContent\n\n    \nwithEntityContent\nSome text content with \nlt;\nentities\ngt;\n and\n      mentioning uint8_t and int32_t\n/withEntityContent\n\n    \notherTag\n \nattribute=\nSingle quoted Value\n/\n\n  \n/childTag\n\n  \n![CDATA[ some CData ]]\n\n\n/main-Tag", 
            "title": "CodeHilite"
        }, 
        {
            "location": "/extensions/codehilite/#codehilite", 
            "text": "CodeHilite  is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.   Syntax highlighting not working?  Please ensure that  Pygments  is installed. See the next section for\nfurther directions on how to set up Pygments or use the official Docker image  with all dependencies pre-installed.", 
            "title": "CodeHilite"
        }, 
        {
            "location": "/extensions/codehilite/#installation", 
            "text": "CodeHilite parses code blocks and wraps them in  pre  tags. If  Pygments \nis installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:  pip install pygments  To enable CodeHilite, add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   codehilite    Migrating from Material 0.2.x  In 0.2.x the CodeHilite extension was included with codehilite(css_class=code)  which switched the CSS class from .codehilite  to  .code . The current version of the theme doesn't require\nthat and defines styles for the default  .codehilite  class, so the part css_class=code  needs to be removed.", 
            "title": "Installation"
        }, 
        {
            "location": "/extensions/codehilite/#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/extensions/codehilite/#specifying-the-language", 
            "text": "The CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.", 
            "title": "Specifying the language"
        }, 
        {
            "location": "/extensions/codehilite/#via-markdown-syntax-recommended", 
            "text": "In Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.  Example:  ``` python\nimport tensorflow as tf\n```  Result:  import   tensorflow   as   tf", 
            "title": "via Markdown syntax recommended"
        }, 
        {
            "location": "/extensions/codehilite/#via-shebang", 
            "text": "Alternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.  Example:      #!/usr/bin/python\n    import tensorflow as tf  Result:  #!/usr/bin/python  import   tensorflow   as   tf", 
            "title": "via Shebang"
        }, 
        {
            "location": "/extensions/codehilite/#via-three-colons", 
            "text": "If the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.  Example:      :::python\n    import tensorflow as tf  Result:  import   tensorflow   as   tf", 
            "title": "via three colons"
        }, 
        {
            "location": "/extensions/codehilite/#adding-line-numbers", 
            "text": "Line numbers can be added by enabling the  linenums  flag in your  mkdocs.yml :  markdown_extensions : \n   -   codehilite(linenums=true)   Example:  ``` python  Bubble sort  \ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j]   items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```  Result:  1\n2\n3\n4\n5\n6  Bubble sort   def   bubble_sort ( items ): \n     for   i   in   range ( len ( items )): \n         for   j   in   range ( len ( items )   -   1   -   i ): \n             if   items [ j ]     items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]", 
            "title": "Adding line numbers"
        }, 
        {
            "location": "/extensions/codehilite/#highlighting-specific-lines", 
            "text": "Specific lines can be highlighted by passing the line numbers to the  hl_lines \nargument placed right after the language identifier. Line counts start at 1.  Example:  ``` python hl_lines= 3 4   Bubble sort  \ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j]   items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```  Result:  1\n2\n3\n4\n5\n6  Bubble sort   def   bubble_sort ( items ):       for   i   in   range ( len ( items )):           for   j   in   range ( len ( items )   -   1   -   i ):               if   items [ j ]     items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]", 
            "title": "Highlighting specific lines"
        }, 
        {
            "location": "/extensions/codehilite/#supported-languages-excerpt", 
            "text": "CodeHilite uses  Pygments , a generic syntax highlighter with support for\nover  300 languages , so the following list of examples is just an excerpt.", 
            "title": "Supported languages excerpt"
        }, 
        {
            "location": "/extensions/codehilite/#bash", 
            "text": "#!/bin/bash  for  OPT in  $@  do \n   case   $OPT  in\n     -f   )    canonicalize = 1   ;; \n     -n   )    switchlf = -n   ;; \n   esac  done  # readlink -f  function  __readlink_f  { \n   target = $1 \n   while   test  -n  $target ;   do \n     filepath = $target \n     cd   ` dirname  $filepath ` \n     target = ` readlink  $filepath ` \n   done \n  /bin/echo  $switchlf   ` pwd  -P ` / ` basename  $filepath `  }  if   [  !  $canonicalize   ] ;   then \n  readlink  $switchlf   $@  else \n   for  file in  $@ \n   do \n     case   $file  in\n      -*  )    ;; \n      *   )   __readlink_f  $file   ;; \n     esac \n     done  fi  exit   $?", 
            "title": "Bash"
        }, 
        {
            "location": "/extensions/codehilite/#c", 
            "text": "extern   size_t  pb_varint_scan ( const   uint8_t   data [],   size_t   left )   { \n   assert ( data     left ); \n   left   =   left     10   ?   10   :   left ;  #ifdef __SSE2__ \n\n   /* Mapping: remaining bytes ==  bitmask */ \n   static   const   int   mask_map []   =   { \n     0x0000 ,   0x0001 ,   0x0003 ,   0x0007 , \n     0x000F ,   0x001F ,   0x003F ,   0x007F , \n     0x00FF ,   0x01FF ,   0x03FF \n   }; \n\n   /* Load buffer into 128-bit integer and create high-bit mask */ \n   __m128i   temp   =   _mm_loadu_si128 (( const   __m128i   * ) data ); \n   __m128i   high   =   _mm_set1_epi8 ( 0x80 ); \n\n   /* Intersect and extract mask with high-bits set */ \n   int   mask   =   _mm_movemask_epi8 ( _mm_and_si128 ( temp ,   high )); \n   mask   =   ( mask     mask_map [ left ])   ^   mask_map [ left ]; \n\n   /* Count trailing zeroes */ \n   return   mask   ?   __builtin_ctz ( mask )   +   1   :   0 ;  #else \n\n   /* Linear scan */ \n   size_t   size   =   0 ; \n   while   ( data [ size ++ ]     0x80 ) \n     if   ( !-- left ) \n       return   0 ; \n   return   size ;  #endif  /* __SSE2__ */  }", 
            "title": "C"
        }, 
        {
            "location": "/extensions/codehilite/#c_1", 
            "text": "Extension ::  Extension ( const   Descriptor   * descriptor ,   const   Descriptor   * scope )   : \n     descriptor_ ( descriptor ), \n     scope_ ( scope )   { \n\n   /* Extract full name for signature */ \n   variables_ [ signature ]   =   descriptor_ - full_name (); \n\n   /* Prepare message symbol */ \n   variables_ [ message ]   =   StringReplace ( \n     variables_ [ signature ],   . ,   _ ,   true ); \n   LowerString ( ( variables_ [ message ])); \n\n   /* Suffix scope to identifiers, if given */ \n   string   suffix   ( ); \n   if   ( scope_ )   { \n     suffix   =   scope_ - full_name (); \n\n     /* Check if the base and extension types are in the same package */ \n     if   ( ! scope_ - file () - package (). compare ( descriptor_ - file () - package ())) \n       suffix   =   StripPrefixString ( suffix , \n         scope_ - file () - package ()   +   . ); \n\n     /* Append to signature */ \n     variables_ [ signature ]   +=   .[   +   suffix   + ] ; \n     suffix   =   _   +   suffix ; \n   } \n\n   /* Prepare extension symbol */ \n   variables_ [ extension ]   =   StringReplace ( \n     suffix ,   . ,   _ ,   true ); \n   LowerString ( ( variables_ [ extension ]));  }", 
            "title": "C++"
        }, 
        {
            "location": "/extensions/codehilite/#c_2", 
            "text": "public   static   void   Send ( \n     Socket   socket ,   byte []   buffer ,   int   offset ,   int   size ,   int   timeout )   { \n   int   startTickCount   =   Environment . TickCount ; \n   int   sent   =   0 ; \n   do   { \n     if   ( Environment . TickCount     startTickCount   +   timeout ) \n       throw   new   Exception ( Timeout. ); \n     try   { \n       sent   +=   socket . Send ( buffer ,   offset   +   sent , \n         size   -   sent ,   SocketFlags . None ); \n     }   catch   ( SocketException   ex )   { \n       if   ( ex . SocketErrorCode   ==   SocketError . WouldBlock   || \n           ex . SocketErrorCode   ==   SocketError . IOPending   || \n           ex . SocketErrorCode   ==   SocketError . NoBufferSpaceAvailable )   { \n         /* Socket buffer is probably full, wait and try again */ \n         Thread . Sleep ( 30 ); \n       }   else   { \n         throw   ex ; \n       } \n     } \n   }   while   ( sent     size );  }", 
            "title": "C&#35;"
        }, 
        {
            "location": "/extensions/codehilite/#clojure", 
            "text": "( clojure-version )  ( defn  partition-when \n   [ f ] \n   ( fn  [ rf ] \n     ( let  [ a   ( java.util.ArrayList. ) \n           fval   ( volatile!   false )] \n       ( fn \n         ([]   ( rf )) \n         ([ result ] \n            ( let  [ result   ( if  ( .isEmpty   a ) \n                           result \n                           ( let  [ v   ( vec   ( .toArray   a ))] \n                             ;; Clear first \n                             ( .clear   a ) \n                             ( unreduced   ( rf   result   v ))))] \n              ( rf   result ))) \n         ([ result   input ] \n             ( if-not  ( and  ( f   input )    @ fval ) \n                ( do \n                  ( vreset!   fval   true ) \n                  ( .add   a   input ) \n                  result ) \n                ( let  [ v   ( vec   ( .toArray   a ))] \n                  ( .clear   a ) \n                  ( let  [ ret   ( rf   result   v )] \n                    ( when-not  ( reduced?   ret ) \n                      ( .add   a   input )) \n                    ret ))))))))  ( into  []   ( partition-when \n           # ( .startsWith   %   )) \n           [ 1d   33    1    2   22    3 ])", 
            "title": "Clojure"
        }, 
        {
            "location": "/extensions/codehilite/#diff", 
            "text": "Index: grunt.js  ===================================================================  --- grunt.js    (revision 31200)  +++ grunt.js    (working copy)  @@ -12,6 +12,7 @@ \n\n module.exports = function (grunt) { +  console.log( hello world ); \n   // Project configuration.\n   grunt.initConfig({\n     lint: { @@ -19,10 +20,6 @@ \n          packages/services.web/{!(test)/**/,}*.js ,\n          packages/error/**/*.js \n       ], -      scripts: [  -         grunt.js ,  -         db/**/*.js  -      ], \n       browser: [\n          packages/web/server.js ,\n          packages/web/server/**/*.js ,", 
            "title": "Diff"
        }, 
        {
            "location": "/extensions/codehilite/#docker", 
            "text": "FROM  ubuntu  # Install vnc, xvfb in order to create a  fake  display and firefox  RUN  apt-get update   apt-get install -y x11vnc xvfb firefox RUN  mkdir ~/.vnc # Setup a password  RUN  x11vnc -storepasswd  1234  ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick)  RUN  bash -c  echo  firefox    /.bashrc  EXPOSE  5900  CMD  [ x11vnc ,  -forever ,  -usepw ,  -create ]", 
            "title": "Docker"
        }, 
        {
            "location": "/extensions/codehilite/#elixir", 
            "text": "require   Logger  def   accept ( port )   do \n   { :ok ,   socket }   =   :gen_tcp . listen ( port , \n                     [ :binary ,   packet :   :line ,   active :   false ,   reuseaddr :   true ]) \n   Logger . info   Accepting connections on port  #{ port } \n   loop_acceptor ( socket )  end  defp   loop_acceptor ( socket )   do \n   { :ok ,   client }   =   :gen_tcp . accept ( socket ) \n   serve ( client ) \n   loop_acceptor ( socket )  end  defp   serve ( socket )   do \n   socket \n   |   read_line () \n   |   write_line ( socket ) \n\n   serve ( socket )  end  defp   read_line ( socket )   do \n   { :ok ,   data }   =   :gen_tcp . recv ( socket ,   0 ) \n   data  end  defp   write_line ( line ,   socket )   do \n   :gen_tcp . send ( socket ,   line )  end", 
            "title": "Elixir"
        }, 
        {
            "location": "/extensions/codehilite/#erlang", 
            "text": "circular ( Defs )   - \n   [   {   {   Type ,   Base   },   Fields   }   || \n     {   {   Type ,   Base   },   Fields   }   -   Defs ,   Type   ==   msg ,   circular ( Base ,   Defs )   ].  circular ( Base ,   Defs )   - \n   Fields   =   proplists : get_value ({   msg ,   Base   },   Defs ), \n   circular ( Defs ,   Fields ,   [ Base ]).  circular (_ Defs ,   [],   _ Path )   - \n   false ;  circular ( Defs ,   [ Field   |   Fields ],   Path )   - \n   case   Field #field.type   of \n     {   msg ,   Type   }   - \n       case   lists : member ( Type ,   Path )   of \n         false   - \n           Children   =   proplists : get_value ({   msg ,   Type   },   Defs ), \n           case   circular ( Defs ,   Children ,   [ Type   |   Path ])   of \n             false   -   circular ( Defs ,   Fields ,   Path ); \n             true    -   true \n           end ; \n         true   - \n           Type   ==   lists : last ( Path )   andalso \n             ( length ( Path )   ==   1   orelse   not   is_tree ( Path )) \n       end ; \n     _   - \n       circular ( Defs ,   Fields ,   Path ) \n   end .", 
            "title": "Erlang"
        }, 
        {
            "location": "/extensions/codehilite/#f", 
            "text": "/// Asynchronously download retangles from the server  /// and decode the JSON format to F# Rectangle record  let   [ Js ]   getRectangles   ()   :   Async Rectangle []   =   async   { \n   let   req   =   XMLHttpRequest () \n   req . Open ( POST ,   /get ,   true ) \n   let!   resp   =   req . AsyncSend () \n   return   JSON . parse ( resp )   }  /// Repeatedly update rectangles after 0.5 sec  let   [ Js ]   updateLoop   ()   =   async   { \n   while   true   do \n     do !   Async . Sleep ( 500 ) \n     let!   rects   =   getRectangles () \n     cleanRectangles () \n     rects   |   Array . iter   createRectangle   }", 
            "title": "F&#35;"
        }, 
        {
            "location": "/extensions/codehilite/#go", 
            "text": "package   main  import   fmt  func   counter ( id   int ,   channel   chan   int ,   closer   bool )   { \n   for   i   :=   0 ;   i     10000000 ;   i ++   { \n     fmt . Println ( process ,   id ,  send ,   i ) \n     channel   -   1 \n   } \n   if   closer   {   close ( channel   )   }  }  func   main ()   { \n   channel   :=   make ( chan   int ) \n   go   counter ( 1 ,   channel ,   false ) \n   go   counter ( 2 ,   channel ,   true ) \n\n   x   :=   0 \n\n   // receiving data from channel \n   for   i   :=   range   channel   { \n     fmt . Println ( receiving ) \n     x   +=   i \n   } \n\n   fmt . Println ( x )  }", 
            "title": "Go"
        }, 
        {
            "location": "/extensions/codehilite/#html", 
            "text": "!doctype html  html   class = no-js   lang = \n   head \n     meta   charset = utf-8 \n     meta   http-equiv = x-ua-compatible   content = ie=edge \n     title HTML5 Boilerplate / title \n     meta   name = description   content = \n     meta   name = viewport   content = width=device-width, initial-scale=1 \n\n     link   rel = apple-touch-icon   href = apple-touch-icon.png \n     link   rel = stylesheet   href = css/normalize.css \n     link   rel = stylesheet   href = css/main.css \n     script   src = js/vendor/modernizr-2.8.3.min.js / script \n   / head \n   body \n     p Hello world! This is HTML5 Boilerplate. / p \n   / body  / html", 
            "title": "HTML"
        }, 
        {
            "location": "/extensions/codehilite/#java", 
            "text": "import   java.util.LinkedList ;  import   java.lang.reflect.Array ;  public   class   UnsortedHashSet E   { \n\n   private   static   final   double   LOAD_FACTOR_LIMIT   =   0.7 ; \n\n   private   int   size ; \n   private   LinkedList E []   con ; \n\n   public   UnsortedHashSet ()   { \n     con    =   ( LinkedList E [])( new   LinkedList [ 10 ]); \n   } \n\n   public   boolean   add ( E   obj )   { \n     int   oldSize   =   size ; \n     int   index   =   Math . abs ( obj . hashCode ())   %   con . length ; \n     if   ( con [ index ]   ==   null ) \n       con [ index ]   =   new   LinkedList E (); \n     if   (! con [ index ]. contains ( obj ))   { \n       con [ index ]. add ( obj ); \n       size ++; \n     } \n     if   ( 1.0   *   size   /   con . length     LOAD_FACTOR_LIMIT ) \n       resize (); \n     return   oldSize   !=   size ; \n   } \n\n   private   void   resize ()   { \n     UnsortedHashSet E   temp   =   new   UnsortedHashSet E (); \n     temp . con   =   ( LinkedList E [])( new   LinkedList [ con . length   *   2   +   1 ]); \n     for   ( int   i   =   0 ;   i     con . length ;   i ++)   { \n       if   ( con [ i ]   !=   null ) \n         for   ( E   e   :   con [ i ]) \n           temp . add ( e ); \n     } \n     con   =   temp . con ; \n   } \n\n   public   int   size ()   { \n     return   size ; \n   }  }", 
            "title": "Java"
        }, 
        {
            "location": "/extensions/codehilite/#javascript", 
            "text": "var   Math   =   require ( lib/math );  var   _extends   =   function   ( target )   { \n   for   ( var   i   =   1 ;   i     arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   } \n\n   return   target ;  };  var   e   =   exports . e   =   2.71828182846 ;  exports [ default ]   =   function   ( x )   { \n   return   Math . exp ( x );  };  module . exports   =   _extends ( exports [ default ],   exports );", 
            "title": "JavaScript"
        }, 
        {
            "location": "/extensions/codehilite/#json", 
            "text": "{ \n   name :   mkdocs-material , \n   version :   0.2.4 , \n   description :   A Material Design theme for MkDocs , \n   homepage :   http://squidfunk.github.io/mkdocs-material/ , \n   authors :   [ \n     squidfunk  martin.donath@squidfunk.com \n   ], \n   license :   MIT , \n   main :   Gulpfile.js , \n   scripts :   { \n     start :   ./node_modules/.bin/gulp watch --mkdocs , \n     build :   ./node_modules/.bin/gulp build --production \n   } \n   ...  }", 
            "title": "JSON"
        }, 
        {
            "location": "/extensions/codehilite/#julia", 
            "text": "using   MXNet  mlp   =   @mx . chain   mx . Variable ( : data )               = \n   mx . FullyConnected ( name =: fc1 ,   num_hidden = 128 )   = \n   mx . Activation ( name =: relu1 ,   act_type =: relu )     = \n   mx . FullyConnected ( name =: fc2 ,   num_hidden = 64 )    = \n   mx . Activation ( name =: relu2 ,   act_type =: relu )     = \n   mx . FullyConnected ( name =: fc3 ,   num_hidden = 10 )    = \n   mx . SoftmaxOutput ( name =: softmax )  # data provider  batch_size   =   100  include ( Pkg . dir ( MXNet ,   examples ,   mnist ,   mnist-data.jl ))  train_provider ,   eval_provider   =   get_mnist_providers ( batch_size )  # setup model  model   =   mx . FeedForward ( mlp ,   context = mx . cpu ())  # optimization algorithm  optimizer   =   mx . SGD ( lr = 0.1 ,   momentum = 0.9 )  # fit parameters  mx . fit ( model ,   optimizer ,   train_provider ,   n_epoch = 20 ,   eval_data = eval_provider )", 
            "title": "Julia"
        }, 
        {
            "location": "/extensions/codehilite/#lua", 
            "text": "local   ffi   =   require ( ffi )  ffi . cdef [[    void Sleep(int ms);    int poll(struct pollfd *fds, unsigned long nfds, int timeout);  ]]  local   sleep  if   ffi . os   ==   Windows   then \n   function   sleep ( s ) \n     ffi . C . Sleep ( s * 1000 ) \n   end  else \n   function   sleep ( s ) \n     ffi . C . poll ( nil ,   0 ,   s   *   1000 ) \n   end  end  for   i   =   1 , 160   do \n   io.write ( . );   io.flush () \n   sleep ( 0.01 )  end  io.write ( \\n )", 
            "title": "Lua"
        }, 
        {
            "location": "/extensions/codehilite/#mysql", 
            "text": "SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees  LEFT   JOIN \n   Employees   AS   Manager  ON \n   Employees . ManagerID   =   Manager . EmployeeID  WHERE \n   Employees . EmployeeID   =   087652 ;", 
            "title": "MySQL"
        }, 
        {
            "location": "/extensions/codehilite/#php", 
            "text": "?php  // src/AppBundle/Controller/LuckyController.php  namespace   AppBundle\\Controller ;  use   Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ;  use   Symfony\\Component\\HttpFoundation\\Response ;  class   LuckyController   { \n\n   /**     * @Route( /lucky/number )     */ \n   public   function   numberAction ()   { \n     $number   =   mt_rand ( 0 ,   100 ); \n\n     return   new   Response ( \n       html body Lucky number:  . $number . /body /html \n     ); \n   }  }", 
            "title": "PHP"
        }, 
        {
            "location": "/extensions/codehilite/#protocol-buffers", 
            "text": "syntax   =   proto2 ;  package   caffe ;  // Specifies the shape (dimensions) of a Blob.  message   BlobShape   { \n   repeated   int64   dim   =   1   [ packed   =   true ];  }  message   BlobProto   { \n   optional   BlobShape   shape   =   7 ; \n   repeated   float   data   =   5   [ packed   =   true ]; \n   repeated   float   diff   =   6   [ packed   =   true ]; \n\n   // 4D dimensions -- deprecated.  Use  shape  instead. \n   optional   int32   num   =   1   [ default   =   0 ]; \n   optional   int32   channels   =   2   [ default   =   0 ]; \n   optional   int32   height   =   3   [ default   =   0 ]; \n   optional   int32   width   =   4   [ default   =   0 ];  }", 
            "title": "Protocol Buffers"
        }, 
        {
            "location": "/extensions/codehilite/#python", 
            "text": "A very simple MNIST classifier.    See extensive documentation at    http://tensorflow.org/tutorials/mnist/beginners/index.md   from   __future__   import   absolute_import  from   __future__   import   division  from   __future__   import   print_function  # Import data  from   tensorflow.examples.tutorials.mnist   import   input_data  import   tensorflow   as   tf  flags   =   tf . app . flags  FLAGS   =   flags . FLAGS  flags . DEFINE_string ( data_dir ,   /tmp/data/ ,   Directory for storing data )  mnist   =   input_data . read_data_sets ( FLAGS . data_dir ,   one_hot = True )  sess   =   tf . InteractiveSession ()  # Create the model  x   =   tf . placeholder ( tf . float32 ,   [ None ,   784 ])  W   =   tf . Variable ( tf . zeros ([ 784 ,   10 ]))  b   =   tf . Variable ( tf . zeros ([ 10 ]))  y   =   tf . nn . softmax ( tf . matmul ( x ,   W )   +   b )", 
            "title": "Python"
        }, 
        {
            "location": "/extensions/codehilite/#ruby", 
            "text": "require   finity/event  require   finity/machine  require   finity/state  require   finity/transition  require   finity/version  module   Finity \n   class   InvalidCallback     StandardError ;   end \n   class   MissingCallback     StandardError ;   end \n   class   InvalidState        StandardError ;   end \n\n   # Class methods to be injected into the including class upon inclusion. \n   module   ClassMethods \n\n     # Instantiate a new state machine for the including class by accepting a \n     # block with state and event (and subsequent transition) definitions. \n     def   finity   options   =   {},   block \n       @finity   ||=   Machine . new   self ,   options ,   block \n     end \n\n     # Return the names of all registered states. \n     def   states \n       @finity . states . map   {   | name ,   _ |   name   } \n     end \n\n     # Return the names of all registered events. \n     def   events \n       @finity . events . map   {   | name ,   _ |   name   } \n     end \n   end \n\n   # Inject methods into the including class upon inclusion. \n   def   self . included   base \n     base . extend   ClassMethods \n   end  end", 
            "title": "Ruby"
        }, 
        {
            "location": "/extensions/codehilite/#xml", 
            "text": "?xml version= 1.0  encoding= UTF-8 ?  !DOCTYPE mainTag SYSTEM  some.dtd  [ENTITY % entity]  ?oxygen RNGSchema= some.rng  type= xml ?  xs:main-Tag   xmlns:xs= http://www.w3.org/2001/XMLSchema \n   !-- This is a sample comment -- \n   childTag   attribute= Quoted Value   another-attribute= Single quoted value \n       a-third-attribute= 123 \n     withTextContent Some text content /withTextContent \n     withEntityContent Some text content with  lt; entities gt;  and\n      mentioning uint8_t and int32_t /withEntityContent \n     otherTag   attribute= Single quoted Value / \n   /childTag \n   ![CDATA[ some CData ]]  /main-Tag", 
            "title": "XML"
        }, 
        {
            "location": "/extensions/footnotes/", 
            "text": "Footnotes\n\n\nFootnotes\n is another extension included in the standard Markdown library.\nAs the name says, it adds the ability to add footnotes to your documentation.\n\n\nInstallation\n\n\nAdd the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nfootnotes\n\n\n\n\n\nUsage\n\n\nThe markup for footnotes is similar to the standard Markdown markup for links.\nA reference is inserted in the text, which can then be defined at any point in\nthe document.\n\n\nInserting the reference\n\n\nThe footnote reference is enclosed in square brackets and starts with a caret,\nfollowed by an arbitrary label which may contain numeric identifiers [1, 2, 3,\n...] or names [Granovetter et al. 1998]. The rendered references are always\nconsecutive superscripted numbers.\n\n\nExample:\n\n\nLorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n\n\n\n\nResult:\n\n\nLorem ipsum\n1\n dolor sit amet, consectetur adipiscing elit.\n2\n\n\nInserting the content\n\n\nThe footnote content is also declared with a label, which must match the label\nused for the footnote reference. It can be inserted at an arbitrary position in\nthe document and is always rendered at the bottom of the page. Furthermore, a\nbacklink is automatically added to the footnote reference.\n\n\non a single line\n\n\nShort statements can be written on the same line.\n\n\nExample:\n\n\n[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n\n\nResult:\n\n\nJump to footnote at the bottom of the page\n\n\non multiple lines\n\n\nParagraphs should be written on the next line. As with all Markdown blocks, the\ncontent must be indented by four spaces.\n\n\nExample:\n\n\n[^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\nJump to footnote at the bottom of the page\n\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n  nulla. Curabitur feugiat, tortor non consequat finibus, justo purus\n  auctor massa, nec semper lorem quam in massa.", 
            "title": "Footnotes"
        }, 
        {
            "location": "/extensions/footnotes/#footnotes", 
            "text": "Footnotes  is another extension included in the standard Markdown library.\nAs the name says, it adds the ability to add footnotes to your documentation.", 
            "title": "Footnotes"
        }, 
        {
            "location": "/extensions/footnotes/#installation", 
            "text": "Add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   footnotes", 
            "title": "Installation"
        }, 
        {
            "location": "/extensions/footnotes/#usage", 
            "text": "The markup for footnotes is similar to the standard Markdown markup for links.\nA reference is inserted in the text, which can then be defined at any point in\nthe document.", 
            "title": "Usage"
        }, 
        {
            "location": "/extensions/footnotes/#inserting-the-reference", 
            "text": "The footnote reference is enclosed in square brackets and starts with a caret,\nfollowed by an arbitrary label which may contain numeric identifiers [1, 2, 3,\n...] or names [Granovetter et al. 1998]. The rendered references are always\nconsecutive superscripted numbers.  Example:  Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]  Result:  Lorem ipsum 1  dolor sit amet, consectetur adipiscing elit. 2", 
            "title": "Inserting the reference"
        }, 
        {
            "location": "/extensions/footnotes/#inserting-the-content", 
            "text": "The footnote content is also declared with a label, which must match the label\nused for the footnote reference. It can be inserted at an arbitrary position in\nthe document and is always rendered at the bottom of the page. Furthermore, a\nbacklink is automatically added to the footnote reference.", 
            "title": "Inserting the content"
        }, 
        {
            "location": "/extensions/footnotes/#on-a-single-line", 
            "text": "Short statements can be written on the same line.  Example:  [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Result:  Jump to footnote at the bottom of the page", 
            "title": "on a single line"
        }, 
        {
            "location": "/extensions/footnotes/#on-multiple-lines", 
            "text": "Paragraphs should be written on the next line. As with all Markdown blocks, the\ncontent must be indented by four spaces.  Example:  [^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:  Jump to footnote at the bottom of the page      Lorem ipsum dolor sit amet, consectetur adipiscing elit.    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n  nulla. Curabitur feugiat, tortor non consequat finibus, justo purus\n  auctor massa, nec semper lorem quam in massa.", 
            "title": "on multiple lines"
        }, 
        {
            "location": "/extensions/metadata/", 
            "text": "Metadata\n\n\nThe \nMetadata\n extension makes it possible to add metadata to a document\nwhich gives more control over the theme in a page-specific context.\n\n\nInstallation\n\n\nAdd the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nmeta\n\n\n\n\n\nUsage\n\n\nMetadata is written as a series of key-value pairs at the beginning of the\nMarkdown document, delimited by a blank line which ends the metadata context.\nNaturally, the metadata is stripped from the document before rendering the\nactual page content and made available to the theme.\n\n\nExample:\n\n\ntitle: Lorem ipsum dolor sit amet\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\npath: path/to/file\nsource: file.js\n\n# Headline\n\n...\n\n\n\n\nSee the next section which covers the metadata that is supported by Material.\n\n\nOverriding the title\n\n\nThe page title can be overridden on a per-document level:\n\n\ntitle: Lorem ipsum dolor sit amet\n\n\n\n\nThis will set the \ntitle\n tag inside the document \nhead\n for the current page\nto the provided value. It will also override the default behavior of Material\nfor MkDocs which appends the site title using a dash as a separator to the page\ntitle.\n\n\nOverriding the description\n\n\nThe page description can also be overridden on a per-document level:\n\n\ndescription\n:\n \nNullam urna elit, malesuada eget finibus ut, ac tortor.\n\n\n\n\n\nThis will set the \nmeta\n tag containing the site description inside the\ndocument \nhead\n for the current page to the provided value.\n\n\nLinking sources\n\n\nWhen a document is related to a specific set of source files and the \nrepo_url\n\nis defined inside the project's \nmkdocs.yml\n, the files can be linked using the\n\nsource\n key:\n\n\nsource: file.js\n\n\n\n\nA new entry at the bottom of the table of contents is generated that is linking\nto the section listing the linked source files. Multiple files can be linked by\nadding filenames on separate lines:\n\n\nsource: file.js\n        file.css\n\n\n\n\nThe filenames are appended to the \nrepo_url\n set in your \nmkdocs.yml\n, but can\nbe prefixed with a \npath\n to ensure correct path resolving:\n\n\nExample:\n\n\npath: tree/master/docs/extensions\nsource: metadata.md\n\n\n\n\nResult:\n\n\nSee the \nsource\n section for the resulting output.", 
            "title": "Metadata"
        }, 
        {
            "location": "/extensions/metadata/#metadata", 
            "text": "The  Metadata  extension makes it possible to add metadata to a document\nwhich gives more control over the theme in a page-specific context.", 
            "title": "Metadata"
        }, 
        {
            "location": "/extensions/metadata/#installation", 
            "text": "Add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   meta", 
            "title": "Installation"
        }, 
        {
            "location": "/extensions/metadata/#usage", 
            "text": "Metadata is written as a series of key-value pairs at the beginning of the\nMarkdown document, delimited by a blank line which ends the metadata context.\nNaturally, the metadata is stripped from the document before rendering the\nactual page content and made available to the theme.  Example:  title: Lorem ipsum dolor sit amet\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\npath: path/to/file\nsource: file.js\n\n# Headline\n\n...  See the next section which covers the metadata that is supported by Material.", 
            "title": "Usage"
        }, 
        {
            "location": "/extensions/metadata/#overriding-the-title", 
            "text": "The page title can be overridden on a per-document level:  title: Lorem ipsum dolor sit amet  This will set the  title  tag inside the document  head  for the current page\nto the provided value. It will also override the default behavior of Material\nfor MkDocs which appends the site title using a dash as a separator to the page\ntitle.", 
            "title": "Overriding the title"
        }, 
        {
            "location": "/extensions/metadata/#overriding-the-description", 
            "text": "The page description can also be overridden on a per-document level:  description :   Nullam urna elit, malesuada eget finibus ut, ac tortor.   This will set the  meta  tag containing the site description inside the\ndocument  head  for the current page to the provided value.", 
            "title": "Overriding the description"
        }, 
        {
            "location": "/extensions/metadata/#linking-sources", 
            "text": "When a document is related to a specific set of source files and the  repo_url \nis defined inside the project's  mkdocs.yml , the files can be linked using the source  key:  source: file.js  A new entry at the bottom of the table of contents is generated that is linking\nto the section listing the linked source files. Multiple files can be linked by\nadding filenames on separate lines:  source: file.js\n        file.css  The filenames are appended to the  repo_url  set in your  mkdocs.yml , but can\nbe prefixed with a  path  to ensure correct path resolving:  Example:  path: tree/master/docs/extensions\nsource: metadata.md  Result:  See the  source  section for the resulting output.", 
            "title": "Linking sources"
        }, 
        {
            "location": "/extensions/permalinks/", 
            "text": "Permalinks\n\n\nPermalinks are a feature of the \nTable of Contents\n extension, which is part\nof the standard Markdown library. The extension inserts an anchor at the end of\neach headline, which makes it possible to directly link to a subpart of the\ndocument.\n\n\nInstallation\n\n\nTo enable permalinks, add the following to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc(permalink=true)\n\n\n\n\n\nThis will add a link containing the paragraph symbol \n\u00b6\n at the end of each\nheadline (exactly like on the page you're currently viewing), which the\nMaterial theme will make appear on hover. In order to change the text of the\npermalink, a string can be passed, e.g.:\n\n\nmarkdown_extensions:\n  - toc(permalink=Link)\n\n\n\n\nUsage\n\n\nWhen enabled, permalinks are inserted automatically.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/extensions/permalinks/#permalinks", 
            "text": "Permalinks are a feature of the  Table of Contents  extension, which is part\nof the standard Markdown library. The extension inserts an anchor at the end of\neach headline, which makes it possible to directly link to a subpart of the\ndocument.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/extensions/permalinks/#installation", 
            "text": "To enable permalinks, add the following to your  mkdocs.yml :  markdown_extensions : \n   -   toc(permalink=true)   This will add a link containing the paragraph symbol  \u00b6  at the end of each\nheadline (exactly like on the page you're currently viewing), which the\nMaterial theme will make appear on hover. In order to change the text of the\npermalink, a string can be passed, e.g.:  markdown_extensions:\n  - toc(permalink=Link)", 
            "title": "Installation"
        }, 
        {
            "location": "/extensions/permalinks/#usage", 
            "text": "When enabled, permalinks are inserted automatically.", 
            "title": "Usage"
        }, 
        {
            "location": "/extensions/pymdown/", 
            "text": "PyMdown Extensions\n\n\nPyMdown Extensions\n is a collection of Markdown extensions that add some\ngreat features to the standard Markdown library. For this reason, the\n\ninstallation of this package is highly recommended\n as it's well-integrated\nwith the Material theme.\n\n\nInstallation\n\n\nThe PyMdown Extensions package can be installed with the following command:\n\n\npip install pymdown-extensions\n\n\n\n\nThe following list of extensions that are part of the PyMdown Extensions\npackage are recommended to be used together with the Material theme:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \npymdownx.arithmatex\n\n  \n-\n \npymdownx.betterem(smart_enable=all)\n\n  \n-\n \npymdownx.caret\n\n  \n-\n \npymdownx.critic\n\n  \n-\n \npymdownx.details\n\n  \n-\n \npymdownx.emoji\n:\n\n      \nemoji_generator\n:\n \n!!python/name:pymdownx.emoji.to_svg\n\n  \n-\n \npymdownx.inlinehilite\n\n  \n-\n \npymdownx.magiclink\n\n  \n-\n \npymdownx.mark\n\n  \n-\n \npymdownx.smartsymbols\n\n  \n-\n \npymdownx.superfences\n\n  \n-\n \npymdownx.tasklist(custom_checkbox=true)\n\n  \n-\n \npymdownx.tilde\n\n\n\n\n\nUsage\n\n\nArithmatex \nMathJax\n\n\n\n\n\nArithmatex\n integrates Material with \nMathJax\n which parses\nblock-style and inline equations written in TeX markup and outputs them in\nmathematical notation. See \nthis thread\n for a short introduction and quick\nreference on how to write equations in TeX syntax.\n\n\nBesides activating the extension in the \nmkdocs.yml\n, the MathJax JavaScript\nruntime needs to be included. This must be done with\n\nadditional JavaScript\n:\n\n\nextra_javascript\n:\n\n  \n-\n \nhttps://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML\n\n\n\n\n\nIf you want to override the default MathJax configuration, you can do this by\nadding another JavaScript file \nbefore\n the MathJax runtime in\n\nextra_javascript\n which contains your MathJax configuration, e.g.:\n\n\nwindow\n.\nMathJax\n \n=\n \n{\n\n  \ntex2jax\n:\n \n{\n\n    \ninlineMath\n:\n \n[\n \n[\n\\\\(\n,\n\\\\)\n]\n \n],\n\n    \ndisplayMath\n:\n \n[\n \n[\n\\\\[\n,\n\\\\]\n]\n \n]\n\n  \n},\n\n  \nTeX\n:\n \n{\n\n    \nTagSide\n:\n \nright\n,\n\n    \nTagIndent\n:\n \n.8em\n,\n\n    \nMultLineWidth\n:\n \n85%\n,\n\n    \nequationNumbers\n:\n \n{\n\n      \nautoNumber\n:\n \nAMS\n,\n\n    \n},\n\n    \nunicode\n:\n \n{\n\n      \nfonts\n:\n \nSTIXGeneral,\nArial Unicode MS\n\n    \n}\n\n  \n},\n\n  \ndisplayAlign\n:\n \nleft\n,\n\n  \nshowProcessingMessages\n:\n \nfalse\n,\n\n  \nmessageStyle\n:\n \nnone\n\n\n};\n\n\n\n\n\nIn your \nmkdocs.yml\n, include it with:\n\n\nextra_javascript\n:\n\n  \n-\n \njavascripts/extra.js\n\n  \n-\n \nhttps://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML\n\n\n\n\n\nBlocks\n\n\nBlocks are enclosed in \n$$\n...\n$$\n which are placed on separate lines.\n\n\nExample:\n\n\n$$\n\n\n\\frac\n{n\n!\n}{k\n!(\nn\n-\nk\n)!\n} \n=\n \n\\binom\n{n}{k}\n\n\n$$\n\n\n\n\n\nResult:\n\n\n\\[\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n\\]\nInline\n\n\nInline equations need to be enclosed in \n$\n...\n$\n:\n\n\nExample:\n\n\nLorem ipsum dolor sit amet: \n$\np\n(\nx|y\n)\n \n=\n \n\\frac\n{p\n(\ny|x\n)\np\n(\nx\n)\n}{p\n(\ny\n)\n}\n$\n\n\n\n\n\nResult:\n\n\nLorem ipsum dolor sit amet: \n\\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)\n\n\nBetterEm\n\n\nBetterEm\n improves the handling of emphasis markup (\nbold\n and \nitalic\n)\nwithin Markdown by providing a more sophisticated parser for better detecting\nstart and end tokens. Read the documentation for \nusage notes\n.\n\n\nCaret\n\n\nCaret\n makes it possible to highlight \ninserted text\n. The portion of\ntext that should be marked as added must be enclosed in two carets \n^^...^^\n.\n\n\nCritic\n\n\nCritic\n implements \nCritic Markup\n, a Markdown extension that enables\nthe tracking of changes (additions, deletions and comments) on documents.\nDuring compilation of the Markdown document, changes can be rendered (default),\naccepted or rejected.\n\n\nText can be \ndeleted\n and replacement text \nadded\n. This can also be\ncombined into \none\na single\n operation. \nHighlighting\n is also\npossible \nand comments can be added inline\n.\n\n\n\n\nFormatting can also be applied to blocks, by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.\n\n\n\n\nDetails\n\n\nDetails\n adds collapsible \nAdmonition-style blocks\n which can contain\narbitrary content using the HTML5 \ndetails\n and \nsummary\n tags. Additionally,\nall Admonition qualifiers can be used, e.g. \nnote\n, \nquestion\n, \nwarning\n etc.:\n\n\n??? question \"How many Prolog programmers does it take to change a lightbulb?\"\n\n\nYes.\n\n\n\n\n\nEmoji\n\n\nEmoji\n adds the ability to insert a \n-load of emojis that we use in\nour daily lives. See the \nEmojiOne demo\n for a list of all available\nemojis. Happy scrolling \n\n\n\n\nLegal disclaimer\n\n\nMaterial has no affiliation with \nEmojiOne\n which is released under\n\nCC BY 4.0\n. When including EmojiOne images or CSS, please read the\n\nEmojiOne license\n to ensure proper usage and attribution.\n\n\n\n\nInlineHilite\n\n\nInlineHilite\n adds support for inline code highlighting. It's useful for\nshort snippets included within body copy, e.g. \nvar\n \ntest\n \n=\n \n0\n;\n and can be\nachived by prefixing inline code with a shebang and language identifier,\ne.g. \n#!js\n.\n\n\nMagicLink\n\n\nMagicLink\n detects links in Markdown and auto-generates the necessary\nmarkup, so no special syntax is required. It auto-links \nhttp[s]://\n and\n\nftp://\n links, as well as references to email addresses.\n\n\nMark\n\n\nMark\n adds the ability to \nhighlight text\n like it was marked with a\n\ntext marker\n. The portion of text that should be highlighted must be\nenclosed in two equal signs \n==...==\n.\n\n\nSmartSymbols\n\n\nSmartSymbols\n converts markup for special characters into their\ncorresponding symbols, e.g. arrows (\n, \n, \n), trademark and copyright\nsymbols (\n, \n, \n) and fractions (\n, \n, ...).\n\n\nSuperFences\n\n\nSuperFences\n provides the ability to nest code blocks under blockquotes,\nlists and other block elements, which the \nFenced Code Blocks\n extension\nfrom the standard Markdown library doesn't parse correctly.\n\n\nTasklist\n\n\nTasklist\n adds support for styled checkbox lists. This is useful for\nkeeping track of tasks and showing what has been done and has yet to be done.\nCheckbox lists are like regular lists, but prefixed with \n[ ]\n for empty or\n\n[x]\n for filled checkboxes.\n\n\nExample:\n\n\n* [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n* [x] Nulla lobortis egestas semper\n* [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n* [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n    * [ ] Praesent sed risus massa\n* [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n* [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n\n\n\n\nResult:\n\n\n\n\n Lorem ipsum dolor sit amet, consectetur adipiscing elit\n\n\n Nulla lobortis egestas semper\n\n\n Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n\n\n Vestibulum convallis sit amet nisi a tincidunt\n\n\n In hac habitasse platea dictumst\n\n\n In scelerisque nibh non dolor mollis congue sed et metus\n\n\n Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n\n\n Praesent sed risus massa\n\n\n\n\n\n\n Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n\n\n Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n\n\n\n\nTilde\n\n\nTilde\n provides an easy way to \nstrike through\n cross out\u00a0text.\nThe portion of text that should be erased must be enclosed in two tildes\n\n~~...~~\n and the extension will take care of the rest.", 
            "title": "PyMdown"
        }, 
        {
            "location": "/extensions/pymdown/#pymdown-extensions", 
            "text": "PyMdown Extensions  is a collection of Markdown extensions that add some\ngreat features to the standard Markdown library. For this reason, the installation of this package is highly recommended  as it's well-integrated\nwith the Material theme.", 
            "title": "PyMdown Extensions"
        }, 
        {
            "location": "/extensions/pymdown/#installation", 
            "text": "The PyMdown Extensions package can be installed with the following command:  pip install pymdown-extensions  The following list of extensions that are part of the PyMdown Extensions\npackage are recommended to be used together with the Material theme:  markdown_extensions : \n   -   pymdownx.arithmatex \n   -   pymdownx.betterem(smart_enable=all) \n   -   pymdownx.caret \n   -   pymdownx.critic \n   -   pymdownx.details \n   -   pymdownx.emoji : \n       emoji_generator :   !!python/name:pymdownx.emoji.to_svg \n   -   pymdownx.inlinehilite \n   -   pymdownx.magiclink \n   -   pymdownx.mark \n   -   pymdownx.smartsymbols \n   -   pymdownx.superfences \n   -   pymdownx.tasklist(custom_checkbox=true) \n   -   pymdownx.tilde", 
            "title": "Installation"
        }, 
        {
            "location": "/extensions/pymdown/#usage", 
            "text": "", 
            "title": "Usage"
        }, 
        {
            "location": "/extensions/pymdown/#arithmatex-mathjax", 
            "text": "Arithmatex  integrates Material with  MathJax  which parses\nblock-style and inline equations written in TeX markup and outputs them in\nmathematical notation. See  this thread  for a short introduction and quick\nreference on how to write equations in TeX syntax.  Besides activating the extension in the  mkdocs.yml , the MathJax JavaScript\nruntime needs to be included. This must be done with additional JavaScript :  extra_javascript : \n   -   https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML   If you want to override the default MathJax configuration, you can do this by\nadding another JavaScript file  before  the MathJax runtime in extra_javascript  which contains your MathJax configuration, e.g.:  window . MathJax   =   { \n   tex2jax :   { \n     inlineMath :   [   [ \\\\( , \\\\) ]   ], \n     displayMath :   [   [ \\\\[ , \\\\] ]   ] \n   }, \n   TeX :   { \n     TagSide :   right , \n     TagIndent :   .8em , \n     MultLineWidth :   85% , \n     equationNumbers :   { \n       autoNumber :   AMS , \n     }, \n     unicode :   { \n       fonts :   STIXGeneral, Arial Unicode MS \n     } \n   }, \n   displayAlign :   left , \n   showProcessingMessages :   false , \n   messageStyle :   none  };   In your  mkdocs.yml , include it with:  extra_javascript : \n   -   javascripts/extra.js \n   -   https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML", 
            "title": "Arithmatex MathJax"
        }, 
        {
            "location": "/extensions/pymdown/#blocks", 
            "text": "Blocks are enclosed in  $$ ... $$  which are placed on separate lines.  Example:  $$  \\frac {n ! }{k !( n - k )! }  =   \\binom {n}{k}  $$   Result:  \\[\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n\\]", 
            "title": "Blocks"
        }, 
        {
            "location": "/extensions/pymdown/#inline", 
            "text": "Inline equations need to be enclosed in  $ ... $ :  Example:  Lorem ipsum dolor sit amet:  $ p ( x|y )   =   \\frac {p ( y|x ) p ( x ) }{p ( y ) } $   Result:  Lorem ipsum dolor sit amet:  \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)", 
            "title": "Inline"
        }, 
        {
            "location": "/extensions/pymdown/#betterem", 
            "text": "BetterEm  improves the handling of emphasis markup ( bold  and  italic )\nwithin Markdown by providing a more sophisticated parser for better detecting\nstart and end tokens. Read the documentation for  usage notes .", 
            "title": "BetterEm"
        }, 
        {
            "location": "/extensions/pymdown/#caret", 
            "text": "Caret  makes it possible to highlight  inserted text . The portion of\ntext that should be marked as added must be enclosed in two carets  ^^...^^ .", 
            "title": "Caret"
        }, 
        {
            "location": "/extensions/pymdown/#critic", 
            "text": "Critic  implements  Critic Markup , a Markdown extension that enables\nthe tracking of changes (additions, deletions and comments) on documents.\nDuring compilation of the Markdown document, changes can be rendered (default),\naccepted or rejected.  Text can be  deleted  and replacement text  added . This can also be\ncombined into  one a single  operation.  Highlighting  is also\npossible  and comments can be added inline .   Formatting can also be applied to blocks, by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.", 
            "title": "Critic"
        }, 
        {
            "location": "/extensions/pymdown/#details", 
            "text": "Details  adds collapsible  Admonition-style blocks  which can contain\narbitrary content using the HTML5  details  and  summary  tags. Additionally,\nall Admonition qualifiers can be used, e.g.  note ,  question ,  warning  etc.:  ??? question \"How many Prolog programmers does it take to change a lightbulb?\"  Yes.", 
            "title": "Details"
        }, 
        {
            "location": "/extensions/pymdown/#emoji", 
            "text": "Emoji  adds the ability to insert a  -load of emojis that we use in\nour daily lives. See the  EmojiOne demo  for a list of all available\nemojis. Happy scrolling    Legal disclaimer  Material has no affiliation with  EmojiOne  which is released under CC BY 4.0 . When including EmojiOne images or CSS, please read the EmojiOne license  to ensure proper usage and attribution.", 
            "title": "Emoji"
        }, 
        {
            "location": "/extensions/pymdown/#inlinehilite", 
            "text": "InlineHilite  adds support for inline code highlighting. It's useful for\nshort snippets included within body copy, e.g.  var   test   =   0 ;  and can be\nachived by prefixing inline code with a shebang and language identifier,\ne.g.  #!js .", 
            "title": "InlineHilite"
        }, 
        {
            "location": "/extensions/pymdown/#magiclink", 
            "text": "MagicLink  detects links in Markdown and auto-generates the necessary\nmarkup, so no special syntax is required. It auto-links  http[s]://  and ftp://  links, as well as references to email addresses.", 
            "title": "MagicLink"
        }, 
        {
            "location": "/extensions/pymdown/#mark", 
            "text": "Mark  adds the ability to  highlight text  like it was marked with a text marker . The portion of text that should be highlighted must be\nenclosed in two equal signs  ==...== .", 
            "title": "Mark"
        }, 
        {
            "location": "/extensions/pymdown/#smartsymbols", 
            "text": "SmartSymbols  converts markup for special characters into their\ncorresponding symbols, e.g. arrows ( ,  ,  ), trademark and copyright\nsymbols ( ,  ,  ) and fractions ( ,  , ...).", 
            "title": "SmartSymbols"
        }, 
        {
            "location": "/extensions/pymdown/#superfences", 
            "text": "SuperFences  provides the ability to nest code blocks under blockquotes,\nlists and other block elements, which the  Fenced Code Blocks  extension\nfrom the standard Markdown library doesn't parse correctly.", 
            "title": "SuperFences"
        }, 
        {
            "location": "/extensions/pymdown/#tasklist", 
            "text": "Tasklist  adds support for styled checkbox lists. This is useful for\nkeeping track of tasks and showing what has been done and has yet to be done.\nCheckbox lists are like regular lists, but prefixed with  [ ]  for empty or [x]  for filled checkboxes.  Example:  * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n* [x] Nulla lobortis egestas semper\n* [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n* [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n    * [ ] Praesent sed risus massa\n* [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n* [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi  Result:    Lorem ipsum dolor sit amet, consectetur adipiscing elit   Nulla lobortis egestas semper   Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est   Vestibulum convallis sit amet nisi a tincidunt   In hac habitasse platea dictumst   In scelerisque nibh non dolor mollis congue sed et metus   Sed egestas felis quis elit dapibus, ac aliquet turpis mattis   Praesent sed risus massa     Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque   Nulla vel eros venenatis, imperdiet enim id, faucibus nisi", 
            "title": "Tasklist"
        }, 
        {
            "location": "/extensions/pymdown/#tilde", 
            "text": "Tilde  provides an easy way to  strike through  cross out\u00a0text.\nThe portion of text that should be erased must be enclosed in two tildes ~~...~~  and the extension will take care of the rest.", 
            "title": "Tilde"
        }, 
        {
            "location": "/specimen/", 
            "text": "Specimen\n\n\nBody copy\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero,\nmollis sed massa vel, \nornare viverra ex\n. Mauris a ullamcorper lacus. Nullam\nurna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales\npulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan\ntempor.\n\n\nSed suscipit\n, orci non pretium pretium, quam mi gravida metus, vel\nvenenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum\neros. \nNulla aliquam\n orci sit amet nisl posuere malesuada. Proin aliquet\nnulla velit, quis ultricies orci feugiat et. \nUt tincidunt sollicitudin\n\ntincidunt. Aenean ullamcorper sit amet nulla at interdum.\n\n\nHeadings\n\n\nThe 3\nrd\n level\n\n\nThe 4\nth\n level\n\n\nThe 5\nth\n level\n\n\nThe 6\nth\n level\n\n\nHeadings \nwith secondary text\n\n\nThe 3\nrd\n level \nwith secondary text\n\n\nThe 4\nth\n level \nwith secondary text\n\n\nThe 5\nth\n level \nwith secondary text\n\n\nThe 6\nth\n level \nwith secondary text\n\n\nBlockquotes\n\n\n\n\nMorbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum.\n  Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc\n  mauris, a ultricies libero efficitur sed. \nClass aptent\n taciti sociosqu ad\n  litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie\n  imperdiet consectetur.\n\n\n\n\nBlockquote nesting\n\n\n\n\nSed aliquet\n, neque at rutrum mollis, neque nisi tincidunt nibh, vitae\n  faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem\n  \nlibero fermentum\n urna, ut efficitur elit ligula et nunc.\n\n\n\n\nMauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla.\n    Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio.\n    Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum.\n    eu odio.\n\n\n\n\nSuspendisse rutrum facilisis risus\n, eu posuere neque commodo a.\n      Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo\n      bibendum, sodales mauris ut, tincidunt massa.\n\n\n\n\n\n\n\n\nOther content blocks\n\n\n\n\nVestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh.\n  \nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\nPraesent at \nreturn\n \ntarget\n, sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.\n\n\n\n\n\n\nLists\n\n\nUnordered lists\n\n\n\n\n\n\nSed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus\n  non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci,\n  at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero.\n\n\n\n\nDuis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n\n\nNam vulputate tincidunt fringilla.\n\n\nNullam dignissim ultrices urna non auctor.\n\n\n\n\n\n\n\n\nAliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut\n  eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam\n  ac, aliquet sed mauris.\n\n\n\n\n\n\nNulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur\n  accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh\n  lacinia sed. Aenean in finibus diam.\n\n\n\n\n\n\nOrdered lists\n\n\n\n\n\n\nInteger vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis\n  elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla\n  consectetur feugiat sodales.\n\n\n\n\n\n\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur\n  ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam\n  pellentesque lacinia eu vel odio.\n\n\n\n\n\n\nVivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet\n  quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a\n  ultricies libero efficitur sed.\n\n\n\n\nMauris dictum mi lacus\n\n\nUt sit amet placerat ante\n\n\nSuspendisse ac eros arcu\n\n\n\n\n\n\n\n\nMorbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet\n  rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed\n  aliquet, neque at rutrum mollis, neque nisi tincidunt nibh.\n\n\n\n\n\n\nPellentesque eget \nvar\n \n_extends\n ornare tellus, ut gravida mi.\n\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\n\n\n\n\n\nVivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n  sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n  nulla. Vivamus a pharetra leo.\n\n\n\n\n\n\nDefinition lists\n\n\n\n\nLorem ipsum dolor sit amet\n\n\n\n\nSed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\ntellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor\nlobortis orci, at elementum urna sodales vitae. In in vehicula nulla.\n\n\nDuis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\nNam vulputate tincidunt fringilla.\nNullam dignissim ultrices urna non auctor.\n\n\n\n\nCras arcu libero\n\n\n\n\nAliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\nut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at\naliquam ac, aliquet sed mauris.\n\n\n\n\n\n\nCode blocks\n\n\nInline\n\n\nMorbi eget \ndapibus felis\n. Vivamus \nvenenatis porttitor\n tortor sit amet\nrutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\nper inceptos himenaeos. \nPellentesque aliquet quam enim\n, eu volutpat urna\nrutrum a.\n\n\nNam vehicula nunc \nreturn\n \ntarget\n mauris, a ultricies libero efficitur\nsed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque\neget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.\n\n\nListing\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\nHorizontal rules\n\n\nAenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet\ndui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna\nnon auctor.\n\n\n\n\nInteger vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis\nelementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla\nconsectetur feugiat sodales.\n\n\nData tables\n\n\n\n\n\n\n\n\nSollicitudo / Pellentesi\n\n\nconsectetur\n\n\nadipiscing\n\n\nelit\n\n\narcu\n\n\nsed\n\n\n\n\n\n\n\n\n\n\nVivamus a pharetra\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nOrnare viverra ex\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nMauris a ullamcorper\n\n\nyes\n\n\nyes\n\n\npartial\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nNullam urna elit\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nMalesuada eget finibus\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nUllamcorper\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nVestibulum sodales\n\n\nyes\n\n\n-\n\n\nyes\n\n\n-\n\n\nyes\n\n\n\n\n\n\nPulvinar nisl\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n-\n\n\n-\n\n\n\n\n\n\nPharetra aliquet est\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nSed suscipit\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nOrci non pretium\n\n\nyes\n\n\npartial\n\n\n-\n\n\n-\n\n\n-\n\n\n\n\n\n\n\n\nSed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus\nnon sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci,\nat elementum urna sodales vitae. In in vehicula nulla, quis ornare libero.\n\n\n\n\n\n\n\n\nLeft\n\n\nCenter\n\n\nRight\n\n\n\n\n\n\n\n\n\n\nLorem\n\n\ndolor\n\n\namet\n\n\n\n\n\n\nipsum\n\n\nsit\n\n\n\n\n\n\n\n\n\n\nVestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\nlectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\nsit amet laoreet nibh.\n\n\n\n  \n\n    \n\n    \n\n  \n\n  \n\n    \n\n      \nTable\n\n      \nwith colgroups (Pandoc)\n\n    \n\n  \n\n  \n\n    \n\n      \nLorem\n\n      \nipsum dolor sit amet.\n\n    \n\n    \n\n      \nSed sagittis\n\n      \neleifend rutrum. Donec vitae suscipit est.", 
            "title": "Specimen"
        }, 
        {
            "location": "/specimen/#specimen", 
            "text": "", 
            "title": "Specimen"
        }, 
        {
            "location": "/specimen/#body-copy", 
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero,\nmollis sed massa vel,  ornare viverra ex . Mauris a ullamcorper lacus. Nullam\nurna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales\npulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan\ntempor.  Sed suscipit , orci non pretium pretium, quam mi gravida metus, vel\nvenenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum\neros.  Nulla aliquam  orci sit amet nisl posuere malesuada. Proin aliquet\nnulla velit, quis ultricies orci feugiat et.  Ut tincidunt sollicitudin \ntincidunt. Aenean ullamcorper sit amet nulla at interdum.", 
            "title": "Body copy"
        }, 
        {
            "location": "/specimen/#headings", 
            "text": "", 
            "title": "Headings"
        }, 
        {
            "location": "/specimen/#the-3rd-level", 
            "text": "", 
            "title": "The 3rd level"
        }, 
        {
            "location": "/specimen/#the-4th-level", 
            "text": "", 
            "title": "The 4th level"
        }, 
        {
            "location": "/specimen/#the-5th-level", 
            "text": "", 
            "title": "The 5th level"
        }, 
        {
            "location": "/specimen/#the-6th-level", 
            "text": "", 
            "title": "The 6th level"
        }, 
        {
            "location": "/specimen/#headings-with-secondary-text", 
            "text": "", 
            "title": "Headings with secondary text"
        }, 
        {
            "location": "/specimen/#the-3rd-level-with-secondary-text", 
            "text": "", 
            "title": "The 3rd level with secondary text"
        }, 
        {
            "location": "/specimen/#the-4th-level-with-secondary-text", 
            "text": "", 
            "title": "The 4th level with secondary text"
        }, 
        {
            "location": "/specimen/#the-5th-level-with-secondary-text", 
            "text": "", 
            "title": "The 5th level with secondary text"
        }, 
        {
            "location": "/specimen/#the-6th-level-with-secondary-text", 
            "text": "", 
            "title": "The 6th level with secondary text"
        }, 
        {
            "location": "/specimen/#blockquotes", 
            "text": "Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum.\n  Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc\n  mauris, a ultricies libero efficitur sed.  Class aptent  taciti sociosqu ad\n  litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie\n  imperdiet consectetur.", 
            "title": "Blockquotes"
        }, 
        {
            "location": "/specimen/#blockquote-nesting", 
            "text": "Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae\n  faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem\n   libero fermentum  urna, ut efficitur elit ligula et nunc.   Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla.\n    Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio.\n    Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum.\n    eu odio.   Suspendisse rutrum facilisis risus , eu posuere neque commodo a.\n      Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo\n      bibendum, sodales mauris ut, tincidunt massa.", 
            "title": "Blockquote nesting"
        }, 
        {
            "location": "/specimen/#other-content-blocks", 
            "text": "Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh.\n   var   _extends   =   function ( target )   { \n   for   ( var   i   =   1 ;   i     arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   }     return   target ;  };    Praesent at  return   target , sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.", 
            "title": "Other content blocks"
        }, 
        {
            "location": "/specimen/#lists", 
            "text": "", 
            "title": "Lists"
        }, 
        {
            "location": "/specimen/#unordered-lists", 
            "text": "Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus\n  non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci,\n  at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero.   Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.  Nam vulputate tincidunt fringilla.  Nullam dignissim ultrices urna non auctor.     Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut\n  eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam\n  ac, aliquet sed mauris.    Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur\n  accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh\n  lacinia sed. Aenean in finibus diam.", 
            "title": "Unordered lists"
        }, 
        {
            "location": "/specimen/#ordered-lists", 
            "text": "Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis\n  elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla\n  consectetur feugiat sodales.    Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n  ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam\n  pellentesque lacinia eu vel odio.    Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet\n  quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a\n  ultricies libero efficitur sed.   Mauris dictum mi lacus  Ut sit amet placerat ante  Suspendisse ac eros arcu     Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet\n  rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed\n  aliquet, neque at rutrum mollis, neque nisi tincidunt nibh.    Pellentesque eget  var   _extends  ornare tellus, ut gravida mi. var   _extends   =   function ( target )   {     for   ( var   i   =   1 ;   i     arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   } \n   return   target ;  };       Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n  sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n  nulla. Vivamus a pharetra leo.", 
            "title": "Ordered lists"
        }, 
        {
            "location": "/specimen/#definition-lists", 
            "text": "Lorem ipsum dolor sit amet   Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\ntellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor\nlobortis orci, at elementum urna sodales vitae. In in vehicula nulla.  Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\nNam vulputate tincidunt fringilla.\nNullam dignissim ultrices urna non auctor.   Cras arcu libero   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\nut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at\naliquam ac, aliquet sed mauris.", 
            "title": "Definition lists"
        }, 
        {
            "location": "/specimen/#code-blocks", 
            "text": "", 
            "title": "Code blocks"
        }, 
        {
            "location": "/specimen/#inline", 
            "text": "Morbi eget  dapibus felis . Vivamus  venenatis porttitor  tortor sit amet\nrutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\nper inceptos himenaeos.  Pellentesque aliquet quam enim , eu volutpat urna\nrutrum a.  Nam vehicula nunc  return   target  mauris, a ultricies libero efficitur\nsed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque\neget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.", 
            "title": "Inline"
        }, 
        {
            "location": "/specimen/#listing", 
            "text": "1\n2\n3\n4\n5\n6\n7\n8\n9 var   _extends   =   function ( target )   { \n   for   ( var   i   =   1 ;   i     arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   }     return   target ;  };", 
            "title": "Listing"
        }, 
        {
            "location": "/specimen/#horizontal-rules", 
            "text": "Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet\ndui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna\nnon auctor.   Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis\nelementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla\nconsectetur feugiat sodales.", 
            "title": "Horizontal rules"
        }, 
        {
            "location": "/specimen/#data-tables", 
            "text": "Sollicitudo / Pellentesi  consectetur  adipiscing  elit  arcu  sed      Vivamus a pharetra  yes  yes  yes  yes  yes    Ornare viverra ex  yes  yes  yes  yes  yes    Mauris a ullamcorper  yes  yes  partial  yes  yes    Nullam urna elit  yes  yes  yes  yes  yes    Malesuada eget finibus  yes  yes  yes  yes  yes    Ullamcorper  yes  yes  yes  yes  yes    Vestibulum sodales  yes  -  yes  -  yes    Pulvinar nisl  yes  yes  yes  -  -    Pharetra aliquet est  yes  yes  yes  yes  yes    Sed suscipit  yes  yes  yes  yes  yes    Orci non pretium  yes  partial  -  -  -     Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus\nnon sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci,\nat elementum urna sodales vitae. In in vehicula nulla, quis ornare libero.     Left  Center  Right      Lorem  dolor  amet    ipsum  sit      Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\nlectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\nsit amet laoreet nibh.  \n   \n     \n     \n   \n   \n     \n       Table \n       with colgroups (Pandoc) \n     \n   \n   \n     \n       Lorem \n       ipsum dolor sit amet. \n     \n     \n       Sed sagittis \n       eleifend rutrum. Donec vitae suscipit est.", 
            "title": "Data tables"
        }, 
        {
            "location": "/customization/", 
            "text": "Customization\n\n\n\n\nThis project is based on \ngithub.com/squidfunk/mkdocs-material\n\n\n\n\nA great starting point\n\n\nProject documentation is as diverse as the projects themselves and the Material\ntheme is a good starting point for making it look great. However, as you write\nyour documentation, you may reach a point where some small adjustments are\nnecessary to preserve the desired style.\n\n\nAdding assets\n\n\nMkDocs\n provides several ways to interfere with themes. In order to make a\nfew tweaks to an existing theme, you can just add your stylesheets and\nJavaScript files to the \ndocs\n directory.\n\n\nAdditional stylesheets\n\n\nIf you want to tweak some colors or change the spacing of certain elements,\nyou can do this in a separate stylesheet. The easiest way is by creating a\nnew stylesheet file in your \ndocs\n directory:\n\n\nmkdir docs/stylesheets\ntouch docs/stylesheets/extra.css\n\n\n\n\nThen, add the following line to your \nmkdocs.yml\n:\n\n\nextra_css\n:\n\n  \n-\n \nstylesheets/extra.css\n\n\n\n\n\nSpin up the development server with \nmkdocs serve\n and start typing your\nchanges in your additional stylesheet file \u2013 you can see them instantly after\nsaving, as the MkDocs development server implements live reloading.\n\n\nAdditional JavaScript\n\n\nThe same is true for additional JavaScript. If you want to integrate another\nsyntax highlighter or add some custom logic to your theme, create a new\nJavaScript file in your \ndocs\n directory:\n\n\nmkdir docs/javascripts\ntouch docs/javascripts/extra.js\n\n\n\n\nThen, add the following line to your \nmkdocs.yml\n:\n\n\nextra_javascript\n:\n\n  \n-\n \njavascripts/extra.js\n\n\n\n\n\nFurther assistance can be found in the \nMkDocs documentation\n.\n\n\nExtending the theme\n\n\nIf you want to alter the HTML source (e.g. add or remove some part), you can\nextend the theme. From version 0.16 on MkDocs implements \ntheme extension\n,\nan easy way to override parts of a theme without forking and changing the\nmain theme.\n\n\nSetup and theme structure\n\n\nReference the Material theme as usual in your \nmkdocs.yml\n, and create a\nnew folder for overrides, e.g. \ntheme\n, which you reference using \ntheme_dir\n:\n\n\ntheme\n:\n \nmaterial\n\n\ntheme_dir\n:\n \ntheme\n\n\n\n\n\n\n\nTheme extension prerequisites\n\n\nAs the \ntheme_dir\n variable is used for the theme extension process, the\nMaterial theme needs to be installed via \npip\n and referenced with the\n\ntheme\n parameter in your \nmkdocs.yml\n.\n\n\n\n\nThe structure in the theme directory must mirror the directory structure of the\noriginal theme, as any file in the theme directory will replace the file with\nthe same name which is part of the original theme. Besides, further assets\nmay also be put in the theme directory.\n\n\nThe directory layout of the Material theme is as follows:\n\n\n.\n\u251c\u2500 assets/\n\u2502  \u251c\u2500 images/                          \n# Images and icons\n\n\u2502  \u251c\u2500 javascripts/                     \n# JavaScript\n\n\u2502  \u2514\u2500 stylesheets/                     \n# Stylesheets\n\n\u251c\u2500 partials/\n\u2502  \u251c\u2500 disqus.html                      \n# Disqus integration\n\n\u2502  \u251c\u2500 footer.html                      \n# Footer bar\n\n\u2502  \u251c\u2500 header.html                      \n# Header bar\n\n\u2502  \u251c\u2500 language.html                    \n# Localized labels\n\n\u2502  \u251c\u2500 nav-item.html                    \n# Main navigation item\n\n\u2502  \u251c\u2500 nav.html                         \n# Main navigation\n\n\u2502  \u251c\u2500 search.html                      \n# Search box\n\n\u2502  \u251c\u2500 social.html                      \n# Social links\n\n\u2502  \u251c\u2500 source.html                      \n# Repository information\n\n\u2502  \u251c\u2500 tabs-item.html                   \n# Tabs navigation item\n\n\u2502  \u251c\u2500 tabs.html                        \n# Tabs navigation\n\n\u2502  \u251c\u2500 toc-item.html                    \n# Table of contents item\n\n\u2502  \u2514\u2500 toc.html                         \n# Table of contents\n\n\u251c\u2500 \n404\n.html                            \n# 404 error page\n\n\u251c\u2500 base.html                           \n# Base template\n\n\u2514\u2500 main.html                           \n# Default page\n\n\n\n\n\nOverriding partials\n\n\nIn order to override the footer, we can replace the \nfooter.html\n partial with\nour own partial. To do this, create the file \npartials/footer.html\n in the\ntheme directory. MkDocs will now use the new partial when rendering the theme.\nThis can be done with any file.\n\n\nOverriding template blocks\n\n\nBesides overriding partials, one can also override so called template blocks,\nwhich are defined inside the Material theme and wrap specific features. To\noverride a template block, create a \nmain.html\n inside the theme directory and\ndefine the block, e.g.:\n\n\n{%\n \nextends\n \nbase.html\n \n%}\n\n\n\n{%\n \nblock\n \nhtmltitle\n \n%}\n\n\n  \ntitle\nLorem ipsum dolor sit amet\n/title\n\n\n{%\n \nendblock\n \n%}\n\n\n\n\n\nThe Material theme provides the following template blocks:\n\n\n\n\n\n\n\n\nBlock name\n\n\nWrapped contents\n\n\n\n\n\n\n\n\n\n\nanalytics\n\n\nWraps the Google Analytics integration\n\n\n\n\n\n\ncontent\n\n\nWraps the main content\n\n\n\n\n\n\ndisqus\n\n\nWraps the disqus integration\n\n\n\n\n\n\nextrahead\n\n\nEmpty block to define additional meta tags\n\n\n\n\n\n\nfonts\n\n\nWraps the webfont definitions\n\n\n\n\n\n\nfooter\n\n\nWraps the footer with navigation and copyright\n\n\n\n\n\n\nheader\n\n\nWraps the fixed header bar\n\n\n\n\n\n\nhtmltitle\n\n\nWraps the \ntitle\n tag\n\n\n\n\n\n\nlibs\n\n\nWraps the JavaScript libraries, e.g. Modernizr\n\n\n\n\n\n\nrepo\n\n\nWraps the repository link in the header bar\n\n\n\n\n\n\nscripts\n\n\nWraps the JavaScript application logic\n\n\n\n\n\n\nsource\n\n\nWraps the linked source files\n\n\n\n\n\n\nsearch_box\n\n\nWraps the search form in the header bar\n\n\n\n\n\n\nsite_meta\n\n\nWraps the meta tags in the document head\n\n\n\n\n\n\nsite_name\n\n\nWraps the site name in the header bar\n\n\n\n\n\n\nsite_nav\n\n\nWraps the site navigation and table of contents\n\n\n\n\n\n\nsocial\n\n\nWraps the social links in the footer\n\n\n\n\n\n\nstyles\n\n\nWraps the stylesheets (also extra sources)\n\n\n\n\n\n\n\n\nFor more on this topic refer to the \nMkDocs documentation\n\n\nTheme development\n\n\nThe Material theme is built on modern technologies like ES6, \nWebpack\n,\n\nBabel\n and \nSASS\n. If you want to make more fundamental changes, it may\nbe necessary to make the adjustments directly in the source of the Material\ntheme and recompile it. This is fairly easy.\n\n\nEnvironment setup\n\n\nIn order to start development on the Material theme, a \nNode.js\n version of\nat least 5 is required, as well as the package manager \nyarn\n which is a\nbetter version of \nnpm\n. First, clone the repository:\n\n\ngit clone https://github.com/squidfunk/mkdocs-material\n\n\n\n\nNext, all dependencies need to be installed, which is done with:\n\n\ncd\n mkdocs-material\npip install -r requirements.txt\nyarn install\n\n\n\n\nDevelopment mode\n\n\nThe Material theme uses a sophisticated asset pipeline using \nGulp\n and\nWebpack which can be started with the following command:\n\n\nyarn start\n\n\n\n\nThis will also start the MkDocs development server which will monitor changes\non assets, templates and documentation. Point your browser to\n\nlocalhost:8000\n and you should see this documentation in front of you.\n\n\nFor example, changing the color palette is as simple as changing the\n\n$md-color-primary\n and \n$md-color-accent\n variables in\n\nsrc/assets/stylesheets/_config.scss\n:\n\n\n$\nmd-color-primary\n:\n \n$\nclr-red-400\n;\n\n\n$\nmd-color-accent\n:\n  \n$\nclr-teal-a700\n;\n\n\n\n\n\n\n\nAutomatically generated files\n\n\nNever make any changes in the \nmaterial\n directory, as the contents of this\ndirectory are automatically generated from the \nsrc\n directory and will be\noverriden when the theme is built.\n\n\n\n\nBuild process\n\n\nWhen you've finished making your changes, you can build the theme by invoking:\n\n\nyarn run build\n\n\n\n\nThis triggers the production-level compilation and minification of all\nstylesheets and JavaScript sources. When the command exits, the final theme is\nlocated in the \nmaterial\n directory. Add the \ntheme_dir\n variable pointing to\nthe aforementioned directory in your original \nmkdocs.yml\n.\n\n\nNow you can run \nmkdocs build\n and you should see your documentation with your\nchanges to the original Material theme.", 
            "title": "Customization"
        }, 
        {
            "location": "/customization/#customization", 
            "text": "This project is based on  github.com/squidfunk/mkdocs-material", 
            "title": "Customization"
        }, 
        {
            "location": "/customization/#a-great-starting-point", 
            "text": "Project documentation is as diverse as the projects themselves and the Material\ntheme is a good starting point for making it look great. However, as you write\nyour documentation, you may reach a point where some small adjustments are\nnecessary to preserve the desired style.", 
            "title": "A great starting point"
        }, 
        {
            "location": "/customization/#adding-assets", 
            "text": "MkDocs  provides several ways to interfere with themes. In order to make a\nfew tweaks to an existing theme, you can just add your stylesheets and\nJavaScript files to the  docs  directory.", 
            "title": "Adding assets"
        }, 
        {
            "location": "/customization/#additional-stylesheets", 
            "text": "If you want to tweak some colors or change the spacing of certain elements,\nyou can do this in a separate stylesheet. The easiest way is by creating a\nnew stylesheet file in your  docs  directory:  mkdir docs/stylesheets\ntouch docs/stylesheets/extra.css  Then, add the following line to your  mkdocs.yml :  extra_css : \n   -   stylesheets/extra.css   Spin up the development server with  mkdocs serve  and start typing your\nchanges in your additional stylesheet file \u2013 you can see them instantly after\nsaving, as the MkDocs development server implements live reloading.", 
            "title": "Additional stylesheets"
        }, 
        {
            "location": "/customization/#additional-javascript", 
            "text": "The same is true for additional JavaScript. If you want to integrate another\nsyntax highlighter or add some custom logic to your theme, create a new\nJavaScript file in your  docs  directory:  mkdir docs/javascripts\ntouch docs/javascripts/extra.js  Then, add the following line to your  mkdocs.yml :  extra_javascript : \n   -   javascripts/extra.js   Further assistance can be found in the  MkDocs documentation .", 
            "title": "Additional JavaScript"
        }, 
        {
            "location": "/customization/#extending-the-theme", 
            "text": "If you want to alter the HTML source (e.g. add or remove some part), you can\nextend the theme. From version 0.16 on MkDocs implements  theme extension ,\nan easy way to override parts of a theme without forking and changing the\nmain theme.", 
            "title": "Extending the theme"
        }, 
        {
            "location": "/customization/#setup-and-theme-structure", 
            "text": "Reference the Material theme as usual in your  mkdocs.yml , and create a\nnew folder for overrides, e.g.  theme , which you reference using  theme_dir :  theme :   material  theme_dir :   theme    Theme extension prerequisites  As the  theme_dir  variable is used for the theme extension process, the\nMaterial theme needs to be installed via  pip  and referenced with the theme  parameter in your  mkdocs.yml .   The structure in the theme directory must mirror the directory structure of the\noriginal theme, as any file in the theme directory will replace the file with\nthe same name which is part of the original theme. Besides, further assets\nmay also be put in the theme directory.  The directory layout of the Material theme is as follows:  .\n\u251c\u2500 assets/\n\u2502  \u251c\u2500 images/                           # Images and icons \n\u2502  \u251c\u2500 javascripts/                      # JavaScript \n\u2502  \u2514\u2500 stylesheets/                      # Stylesheets \n\u251c\u2500 partials/\n\u2502  \u251c\u2500 disqus.html                       # Disqus integration \n\u2502  \u251c\u2500 footer.html                       # Footer bar \n\u2502  \u251c\u2500 header.html                       # Header bar \n\u2502  \u251c\u2500 language.html                     # Localized labels \n\u2502  \u251c\u2500 nav-item.html                     # Main navigation item \n\u2502  \u251c\u2500 nav.html                          # Main navigation \n\u2502  \u251c\u2500 search.html                       # Search box \n\u2502  \u251c\u2500 social.html                       # Social links \n\u2502  \u251c\u2500 source.html                       # Repository information \n\u2502  \u251c\u2500 tabs-item.html                    # Tabs navigation item \n\u2502  \u251c\u2500 tabs.html                         # Tabs navigation \n\u2502  \u251c\u2500 toc-item.html                     # Table of contents item \n\u2502  \u2514\u2500 toc.html                          # Table of contents \n\u251c\u2500  404 .html                             # 404 error page \n\u251c\u2500 base.html                            # Base template \n\u2514\u2500 main.html                            # Default page", 
            "title": "Setup and theme structure"
        }, 
        {
            "location": "/customization/#overriding-partials", 
            "text": "In order to override the footer, we can replace the  footer.html  partial with\nour own partial. To do this, create the file  partials/footer.html  in the\ntheme directory. MkDocs will now use the new partial when rendering the theme.\nThis can be done with any file.", 
            "title": "Overriding partials"
        }, 
        {
            "location": "/customization/#overriding-template-blocks", 
            "text": "Besides overriding partials, one can also override so called template blocks,\nwhich are defined inside the Material theme and wrap specific features. To\noverride a template block, create a  main.html  inside the theme directory and\ndefine the block, e.g.:  {%   extends   base.html   %}  {%   block   htmltitle   %}     title Lorem ipsum dolor sit amet /title  {%   endblock   %}   The Material theme provides the following template blocks:     Block name  Wrapped contents      analytics  Wraps the Google Analytics integration    content  Wraps the main content    disqus  Wraps the disqus integration    extrahead  Empty block to define additional meta tags    fonts  Wraps the webfont definitions    footer  Wraps the footer with navigation and copyright    header  Wraps the fixed header bar    htmltitle  Wraps the  title  tag    libs  Wraps the JavaScript libraries, e.g. Modernizr    repo  Wraps the repository link in the header bar    scripts  Wraps the JavaScript application logic    source  Wraps the linked source files    search_box  Wraps the search form in the header bar    site_meta  Wraps the meta tags in the document head    site_name  Wraps the site name in the header bar    site_nav  Wraps the site navigation and table of contents    social  Wraps the social links in the footer    styles  Wraps the stylesheets (also extra sources)     For more on this topic refer to the  MkDocs documentation", 
            "title": "Overriding template blocks"
        }, 
        {
            "location": "/customization/#theme-development", 
            "text": "The Material theme is built on modern technologies like ES6,  Webpack , Babel  and  SASS . If you want to make more fundamental changes, it may\nbe necessary to make the adjustments directly in the source of the Material\ntheme and recompile it. This is fairly easy.", 
            "title": "Theme development"
        }, 
        {
            "location": "/customization/#environment-setup", 
            "text": "In order to start development on the Material theme, a  Node.js  version of\nat least 5 is required, as well as the package manager  yarn  which is a\nbetter version of  npm . First, clone the repository:  git clone https://github.com/squidfunk/mkdocs-material  Next, all dependencies need to be installed, which is done with:  cd  mkdocs-material\npip install -r requirements.txt\nyarn install", 
            "title": "Environment setup"
        }, 
        {
            "location": "/customization/#development-mode", 
            "text": "The Material theme uses a sophisticated asset pipeline using  Gulp  and\nWebpack which can be started with the following command:  yarn start  This will also start the MkDocs development server which will monitor changes\non assets, templates and documentation. Point your browser to localhost:8000  and you should see this documentation in front of you.  For example, changing the color palette is as simple as changing the $md-color-primary  and  $md-color-accent  variables in src/assets/stylesheets/_config.scss :  $ md-color-primary :   $ clr-red-400 ;  $ md-color-accent :    $ clr-teal-a700 ;    Automatically generated files  Never make any changes in the  material  directory, as the contents of this\ndirectory are automatically generated from the  src  directory and will be\noverriden when the theme is built.", 
            "title": "Development mode"
        }, 
        {
            "location": "/customization/#build-process", 
            "text": "When you've finished making your changes, you can build the theme by invoking:  yarn run build  This triggers the production-level compilation and minification of all\nstylesheets and JavaScript sources. When the command exits, the final theme is\nlocated in the  material  directory. Add the  theme_dir  variable pointing to\nthe aforementioned directory in your original  mkdocs.yml .  Now you can run  mkdocs build  and you should see your documentation with your\nchanges to the original Material theme.", 
            "title": "Build process"
        }, 
        {
            "location": "/license/", 
            "text": "License\n\n\n\n\nThis project is based on \ngithub.com/squidfunk/mkdocs-material\n\n\n\n\nMIT License\n\n\nCopyright \n 2016 - 2017 Martin Donath\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "License"
        }, 
        {
            "location": "/license/#license", 
            "text": "This project is based on  github.com/squidfunk/mkdocs-material   MIT License  Copyright   2016 - 2017 Martin Donath  Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.", 
            "title": "License"
        }
    ]
}